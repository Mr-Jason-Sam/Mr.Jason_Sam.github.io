<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Shuzang's Blog</title><link>https://shuzang.github.io/posts/</link><description>Recent content in Posts on Shuzang's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 18 Oct 2020 10:16:00 +0800</lastBuildDate><atom:link href="https://shuzang.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>计算机基础-实数在计算机中的存储</title><link>https://shuzang.github.io/storage-of-reals-in-computers/</link><pubDate>Sun, 18 Oct 2020 10:16:00 +0800</pubDate><guid>https://shuzang.github.io/storage-of-reals-in-computers/</guid><description>&lt;p>最近在智能合约中实现信誉算法，但是 Solidity 不支持浮点数赋值和运算，好在有人写了一个库实现了 IEEE 754 浮点数标准，只不过输入输出都是二进制，所以回过头来仔细理解一下实数在计算机中的存储。&lt;/p></description></item><item><title>浮点数处理</title><link>https://shuzang.github.io/math-in-solidity/</link><pubDate>Sun, 18 Oct 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/math-in-solidity/</guid><description>&lt;p>对 Solidity 中如何进行浮点数的处理做说明。&lt;/p></description></item><item><title>Mysql学习补充-临时表与派生表</title><link>https://shuzang.github.io/mysql-learning-supplement-temporary-table-and-derived-table/</link><pubDate>Tue, 13 Oct 2020 19:15:00 +0800</pubDate><guid>https://shuzang.github.io/mysql-learning-supplement-temporary-table-and-derived-table/</guid><description>&lt;p>区分 MySQL 中临时表与派生表的概念，明确它们的用途。&lt;/p></description></item><item><title>Go实现2048小游戏</title><link>https://shuzang.github.io/a-cli-implement-of-2048-game-using-go/</link><pubDate>Thu, 08 Oct 2020 19:35:00 +0800</pubDate><guid>https://shuzang.github.io/a-cli-implement-of-2048-game-using-go/</guid><description>&lt;p>Go 实现一个命令行界面的 2048 游戏，仅涉及 Git 和 Go，用来熟悉基本语言特性。原型项目来自 &lt;a href="https://github.com/chhabraamit/2048">https://github.com/chhabraamit/2048&lt;/a>&lt;/p></description></item><item><title>win10效率优化7-终端和winget</title><link>https://shuzang.github.io/efficient-use-of-win10-7-windows-terminal-and-winget/</link><pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/efficient-use-of-win10-7-windows-terminal-and-winget/</guid><description>Windows terminal 的安装配置和 winget 的基本使用，主要原因是 Powershell 不好看。 1. Windows terminal 界面友好的终端应用，凡是命令行程序都可以用它启动，可以将 win10 下的 cmd、Powersh</description></item><item><title>算法-时间复杂度和空间复杂度</title><link>https://shuzang.github.io/algorithm-time-and-space-complexity/</link><pubDate>Fri, 18 Sep 2020 20:37:00 +0800</pubDate><guid>https://shuzang.github.io/algorithm-time-and-space-complexity/</guid><description>&lt;p>时间和空间复杂度的分析是编制程序的一个基本能力，不过平时基本都是脑子里简单的估计，本篇文章打算回忆一下大 O 表示法和具体的时间复杂度的推导过程。&lt;/p></description></item><item><title>Mysql学习补充-语句执行顺序</title><link>https://shuzang.github.io/mysql-learning-supplement-statement-execution-order/</link><pubDate>Sun, 13 Sep 2020 16:08:00 +0800</pubDate><guid>https://shuzang.github.io/mysql-learning-supplement-statement-execution-order/</guid><description>&lt;p>这篇文章用来仔细思考 MySQL 查询语句的执行顺序。&lt;/p></description></item><item><title>Mysql学习补充-关系数据理论</title><link>https://shuzang.github.io/mysql-learning-supplement-relational-data-theory/</link><pubDate>Fri, 11 Sep 2020 19:30:00 +0800</pubDate><guid>https://shuzang.github.io/mysql-learning-supplement-relational-data-theory/</guid><description>&lt;p>MySQL 作为关系数据库，关系数据理论是基础，本文进行补充学习，主要包括关系模型、关系代数和范式的相关知识。&lt;/p></description></item><item><title>抗疫与铁线虫入侵</title><link>https://shuzang.github.io/anti-epidemic-and-worm-invasion/</link><pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/anti-epidemic-and-worm-invasion/</guid><description>&lt;p>今天的周六电影时间看的是一部韩国电影《铁线虫入侵》。可能电影本身质量不是顶尖，但结合今年的疫情和带给我的感触，看完之后我还是给了它五星。一部电影，要么能带给人们快乐，要么能带给人们反思，对我而言，这部电影做到了第二点。下面就写一写我的感受。&lt;/p></description></item><item><title>交易池底层实现</title><link>https://shuzang.github.io/transaction-and-txpool/</link><pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/transaction-and-txpool/</guid><description>&lt;p>起源于老师提出的一个问题：区块链是如何处理同时发起的多个请求的。想了想觉得核心是交易池机制，因此准备看一下交易池的原理和实现。&lt;/p></description></item><item><title>Windows、Linux、Unix和 macOS</title><link>https://shuzang.github.io/windows-linux-unix-and-macos/</link><pubDate>Wed, 02 Sep 2020 21:15:00 +0800</pubDate><guid>https://shuzang.github.io/windows-linux-unix-and-macos/</guid><description>&lt;p>目前主流的操作系统就是 Windows、Linux 和 macOS，有时候我们也常听到 Unix。今天查一下资料看一看它们的区别。&lt;/p></description></item><item><title>正则表达式与通配符</title><link>https://shuzang.github.io/regular-expression-basic-syntax/</link><pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/regular-expression-basic-syntax/</guid><description>&lt;p>正则表达式在字符串处理时使用的非常普遍，这次来学习正则的相关知识，分别结束通配符、正则及它们的区别。&lt;/p></description></item><item><title>算法-字符串类问题</title><link>https://shuzang.github.io/algorithm-stings/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/algorithm-stings/</guid><description>做 Leetcode 每日一题的时候遇到了子串判断类的问题，想起一直没仔细的去看过 KMP 等字符串常用的算法，所以这里学习一下。 1. 重复的子字符串 这就是今天遇到的题目</description></item><item><title>Bash脚本语法2</title><link>https://shuzang.github.io/bash-script-grammer-2/</link><pubDate>Fri, 21 Aug 2020 17:13:00 +0800</pubDate><guid>https://shuzang.github.io/bash-script-grammer-2/</guid><description>&lt;p>很多时候都要求能使用 Shell 脚本进行编程，本文是根据阮一峰大神的 &lt;a href="https://wangdoc.com/bash/intro.html" target="_blank" rel="noopener noreffer">系列教程&lt;/a>
总结的基本知识。&lt;/p></description></item><item><title>HTTP方法</title><link>https://shuzang.github.io/http-method/</link><pubDate>Thu, 20 Aug 2020 19:38:00 +0800</pubDate><guid>https://shuzang.github.io/http-method/</guid><description>&lt;p>理解不同的 HTTP 方法的区别，主要参考 &lt;a href="https://tools.ietf.org/html/rfc7231#section-4.3" target="_blank" rel="noopener noreffer">RFC 7231&lt;/a>
&lt;/p></description></item><item><title>Bash脚本语法1</title><link>https://shuzang.github.io/bash-script-grammer-1/</link><pubDate>Tue, 18 Aug 2020 11:37:00 +0800</pubDate><guid>https://shuzang.github.io/bash-script-grammer-1/</guid><description>&lt;p>很多时候都要求能使用 Shell 脚本进行编程，本文是根据阮一峰大神的 &lt;a href="https://wangdoc.com/bash/intro.html" target="_blank" rel="noopener noreffer">系列教程&lt;/a>
总结的基本知识。&lt;/p></description></item><item><title>操作系统6-文件管理</title><link>https://shuzang.github.io/operate-system-6-file-management/</link><pubDate>Tue, 18 Aug 2020 08:18:00 +0800</pubDate><guid>https://shuzang.github.io/operate-system-6-file-management/</guid><description>&lt;p>本篇介绍文件管理相关的内容。包括硬盘结构、文件和目录的概念，以及一个文件系统涉及的其它知识。&lt;/p></description></item><item><title>操作系统5-设备管理</title><link>https://shuzang.github.io/operate-system-5-device-management/</link><pubDate>Mon, 17 Aug 2020 19:25:00 +0800</pubDate><guid>https://shuzang.github.io/operate-system-5-device-management/</guid><description>&lt;p>本篇介绍设备管理的相关内容。最近发现本科用的教材内容非常陈旧，而且不是那么浅显易懂，于是找了一本国外的教材《操作系统导论》，主要根据这个来学习。&lt;/p></description></item><item><title>Golang深入学习9-调用栈</title><link>https://shuzang.github.io/golang-deep-learning-9-call-stack/</link><pubDate>Sat, 15 Aug 2020 09:47:00 +0800</pubDate><guid>https://shuzang.github.io/golang-deep-learning-9-call-stack/</guid><description>&lt;p>本篇介绍如何分析 Go 的调用栈。&lt;/p></description></item><item><title>Golang深入学习8-堆栈与逃逸分析</title><link>https://shuzang.github.io/golang-deep-learning-8-stack-heap-and-escape-analysis/</link><pubDate>Sat, 15 Aug 2020 08:47:00 +0800</pubDate><guid>https://shuzang.github.io/golang-deep-learning-8-stack-heap-and-escape-analysis/</guid><description>&lt;p>本篇介绍 Go 的堆栈和逃逸分析。&lt;/p></description></item><item><title>Golang查漏补缺-定义与声明的区别</title><link>https://shuzang.github.io/golang-supplement-the-difference-between-definition-and-declaration/</link><pubDate>Sat, 15 Aug 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang-supplement-the-difference-between-definition-and-declaration/</guid><description>&lt;p>一直都比较纠结这个问题，所以搜了一下答案，记录在这里。&lt;/p></description></item><item><title>操作系统4-存储管理</title><link>https://shuzang.github.io/operate-system-4-memory-management/</link><pubDate>Thu, 13 Aug 2020 11:04:00 +0800</pubDate><guid>https://shuzang.github.io/operate-system-4-memory-management/</guid><description>&lt;p>本文介绍操作系统另一个重要功能：存储管理。包括存储管理的基本功能，以及分区、页式、段式与段页式三种存储管理方法的具体细节。&lt;/p></description></item><item><title>操作系统3-进程管理</title><link>https://shuzang.github.io/operate-system-3-process-management/</link><pubDate>Mon, 10 Aug 2020 08:06:00 +0800</pubDate><guid>https://shuzang.github.io/operate-system-3-process-management/</guid><description>&lt;p>本文介绍操作系统最重要的一部分功能之一：进程管理，从进程的概念到进程的通信，再到死锁问题，最后结束进程的调度。&lt;/p></description></item><item><title>操作系统2-用户接口</title><link>https://shuzang.github.io/operate-system-2-user-interface/</link><pubDate>Sun, 09 Aug 2020 17:16:00 +0800</pubDate><guid>https://shuzang.github.io/operate-system-2-user-interface/</guid><description>&lt;p>本文介绍操作系统的一个重要功能：提供用户接口。&lt;/p></description></item><item><title>操作系统1-概述</title><link>https://shuzang.github.io/operate-system-1-overview/</link><pubDate>Sun, 09 Aug 2020 10:27:00 +0800</pubDate><guid>https://shuzang.github.io/operate-system-1-overview/</guid><description>&lt;p>本文介绍操作系统的概念、历史、分类、功能及理解这些功能的必备基础知识。&lt;/p></description></item><item><title>win10使用powershell批量重命名</title><link>https://shuzang.github.io/use-powershell-rename-multiple-files/</link><pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/use-powershell-rename-multiple-files/</guid><description>&lt;p>win10 需要批量重命名的时候很多，每次打开专门的软件比较麻烦，于是查了下使用 powershell 如何达成这一目的。&lt;/p></description></item><item><title>算法-背包问题</title><link>https://shuzang.github.io/algorithm-knapsack-problem/</link><pubDate>Thu, 06 Aug 2020 10:22:00 +0800</pubDate><guid>https://shuzang.github.io/algorithm-knapsack-problem/</guid><description>&lt;p>奇安信的笔试遇到了完全背包问题，结果写的时候按 0-1 背包写的贪心，最后没 AC，因此本篇对所有的背包问题做一次整理。&lt;/p></description></item><item><title>符合泊松分布的事件模拟到达时间生成</title><link>https://shuzang.github.io/generate-random-timings-for-a-poisson-process/</link><pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/generate-random-timings-for-a-poisson-process/</guid><description>&lt;p>我们要进行的仿真是在随机的时间执行随机的事件，这个时间就叫做事件到达时间。根据已有知识，随机的事件到达时间应该符合泊松分布，事件到达时间的间隔符合指数分布，实现时通常采用生成到达时间间隔的方式。这里的实现翻译了文章 &lt;a href="https://preshing.com/20111007/how-to-generate-random-timings-for-a-poisson-process/" target="_blank" rel="noopener noreffer">How to Generate Random Timings for a Poisson Process&lt;/a>
，使用的语言是 Go。&lt;/p></description></item><item><title>Golang深入学习7-调度器与垃圾回收</title><link>https://shuzang.github.io/golang-deep-learning-7-scheduler-and-garbage-collection/</link><pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang-deep-learning-7-scheduler-and-garbage-collection/</guid><description>&lt;p>调度器和垃圾回收都属于 runtime 的一部分，本文我们介绍 Go 中 runtime 的含义，然后再来分析 Go 的调度器和垃圾回收策略。&lt;/p></description></item><item><title>Golang深入学习6-使用pprof进行性能分析</title><link>https://shuzang.github.io/golang-deep-learning-6-performance-analysis-pprof/</link><pubDate>Mon, 27 Jul 2020 18:46:00 +0800</pubDate><guid>https://shuzang.github.io/golang-deep-learning-6-performance-analysis-pprof/</guid><description>&lt;p>pprof 用来做 Go 程序的性能监控，让我们知道在什么地方耗费了多少 CPU、memory。&lt;/p></description></item><item><title>Golang深入学习5-使用dlv调试程序</title><link>https://shuzang.github.io/golang-deep-learning-5-debug-with-dlv/</link><pubDate>Sun, 26 Jul 2020 09:43:00 +0800</pubDate><guid>https://shuzang.github.io/golang-deep-learning-5-debug-with-dlv/</guid><description>&lt;p>在C/C++中，使用 GDB 调试程序，但在Go中，看过网上的一些文章后，发现 dlv 是个更好的选择，本文进行介绍。&lt;/p></description></item><item><title>Golang深入学习4-map</title><link>https://shuzang.github.io/golang-deep-learning-4-map/</link><pubDate>Sat, 25 Jul 2020 09:45:00 +0800</pubDate><guid>https://shuzang.github.io/golang-deep-learning-4-map/</guid><description>&lt;p>本文关心 map 的底层实现、map 的扩容机制和 map 遍历的随机性。&lt;/p></description></item><item><title>Golang深入学习3-切片</title><link>https://shuzang.github.io/golang-deep-learning-3-slice/</link><pubDate>Fri, 24 Jul 2020 16:13:00 +0800</pubDate><guid>https://shuzang.github.io/golang-deep-learning-3-slice/</guid><description>&lt;p>本篇理解切片的底层实现和扩容方式。&lt;/p></description></item><item><title>Golang深入学习2-string</title><link>https://shuzang.github.io/golang-deep-learning-2-string/</link><pubDate>Fri, 24 Jul 2020 11:19:00 +0800</pubDate><guid>https://shuzang.github.io/golang-deep-learning-2-string/</guid><description>&lt;p>Go 中字符串虽然作为基本数据类型，但本质依然是字符数组，本篇文章理解 Go 底层 string 类型是如何实现的，以及探讨它与 []byte 之间的关系。&lt;/p></description></item><item><title>HTML5基础结构</title><link>https://shuzang.github.io/html5-learning-basic-structure/</link><pubDate>Thu, 23 Jul 2020 16:54:00 +0800</pubDate><guid>https://shuzang.github.io/html5-learning-basic-structure/</guid><description>&lt;p>HTML（HyperText Markup Language，超文本标记语言） 是前端三组件（HTML/CSS/JavaScript）的第一个，负责组织一个网页的结构。HTML5 是 HTML 的最新版本，这篇文章学习其基本结构。&lt;/p></description></item><item><title>Golang深入学习1-uintptr 和 Unsafe.Pointer</title><link>https://shuzang.github.io/golang-deep-learning-1-uintptr-and-unsafe.pointer/</link><pubDate>Thu, 23 Jul 2020 12:15:00 +0800</pubDate><guid>https://shuzang.github.io/golang-deep-learning-1-uintptr-and-unsafe.pointer/</guid><description>&lt;p>本篇介绍 Go 中的指针、uintptr 和 unsafe.Pointer 三个概念。&lt;/p></description></item><item><title>算法-分支限界</title><link>https://shuzang.github.io/algorithm-branch-and-bound/</link><pubDate>Thu, 23 Jul 2020 10:07:00 +0800</pubDate><guid>https://shuzang.github.io/algorithm-branch-and-bound/</guid><description>&lt;p>分支限界和回溯都是有效搜索解空间树的方法，不同的是，分支限界使用广度优先或最小耗费/最大效益优先的方式。&lt;/p></description></item><item><title>计算机网络-数据链路层</title><link>https://shuzang.github.io/data-link-layer/</link><pubDate>Sun, 19 Jul 2020 20:25:00 +0800</pubDate><guid>https://shuzang.github.io/data-link-layer/</guid><description>&lt;p>两台主机间的数据传输，通常不是直达的，而是分成一段一段的链路。两个相邻节点间如何传输数据，是数据链路层关心的事情。&lt;/p></description></item><item><title>计算机网络-物理层</title><link>https://shuzang.github.io/physical-layer/</link><pubDate>Sun, 19 Jul 2020 20:08:00 +0800</pubDate><guid>https://shuzang.github.io/physical-layer/</guid><description>&lt;p>物理层是 OSI 体系最下面的一层，涉及的多数是关于传输媒体和数据通信的知识，概念居多，本篇不详细解释，仅分辨物理层的主要任务。&lt;/p>
&lt;p>物理层考虑的问题是如何传输比特流，它要负责向数据链路层屏蔽掉传输媒体和通信手段的差异，从而使上层能专注自己的协议和服务。&lt;/p></description></item><item><title>Mysql学习8-存储过程、触发器和事件</title><link>https://shuzang.github.io/mysql-learning-8-procedure-trigger-and-event/</link><pubDate>Wed, 15 Jul 2020 17:22:00 +0800</pubDate><guid>https://shuzang.github.io/mysql-learning-8-procedure-trigger-and-event/</guid><description>&lt;p>存储过程是在数据库中定义一些 SQL 语句的集合，可以直接调用这些存储过程来执行已经定义好的 SQL 语句。避免了开发人员重复编写相同 SQL 语句的问题。&lt;/p>
&lt;p>触发器和存储过程相似，都是嵌入到 MySQL 中的一段程序。触发器是由事件来触发某个操作。当数据库执行这些事件时，就会激活触发器来执行相应的操作。&lt;/p>
&lt;p>本篇介绍这两个概念&lt;/p></description></item><item><title>Mysql学习7-视图与索引</title><link>https://shuzang.github.io/mysql-learning-7-view-and-index/</link><pubDate>Wed, 15 Jul 2020 15:52:00 +0800</pubDate><guid>https://shuzang.github.io/mysql-learning-7-view-and-index/</guid><description>&lt;p>视图在数据库中的作用类似于窗户，用户可以通过这个窗口看到只对自己有用的数据。既保障了数据的安全性，又大大提高了查询效率。&lt;/p>
&lt;p>索引是提高数据库性能的重要方式，用来快速找出数据表中的特定记录。如果在表中查询的列有一个索引，MySQL 能快速到达一个位置去搜寻数据，而不必查看所有数据。&lt;/p>
&lt;p>本文介绍这两个概念。&lt;/p></description></item><item><title>HTTP与HTTPS协议</title><link>https://shuzang.github.io/http-and-https/</link><pubDate>Thu, 09 Jul 2020 20:43:00 +0800</pubDate><guid>https://shuzang.github.io/http-and-https/</guid><description>&lt;p>HTTP 和 HTTPS 是最常用的两个协议，本篇对它们进行介绍。&lt;/p></description></item><item><title>TCP和UDP协议</title><link>https://shuzang.github.io/transmission-control-protocol-and-user-datagram-protocol/</link><pubDate>Tue, 07 Jul 2020 21:16:00 +0800</pubDate><guid>https://shuzang.github.io/transmission-control-protocol-and-user-datagram-protocol/</guid><description>&lt;p>本篇介绍计算机网络运输层的的 TCP 和 UDP 协议，主要是过一遍，加深理解，以及方便以后查看，毕竟不是每次都带着书。&lt;/p></description></item><item><title>如何避免信息过载</title><link>https://shuzang.github.io/how-to-avoid-information-overload/</link><pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/how-to-avoid-information-overload/</guid><description>信息过载可能严重影响我们的生活，网上看到了心理与行为信息部的一些建议 。 1. 主动浏览，拒绝被动推送 筛选有效的信息源 重点关注政府机关、专业组织等具</description></item><item><title>基于Go语言开发在线论坛9-部署Go Web应用</title><link>https://shuzang.github.io/development-of-online-forum-based-on-golang-9-deploy-go-web-application/</link><pubDate>Sun, 07 Jun 2020 20:50:00 +0800</pubDate><guid>https://shuzang.github.io/development-of-online-forum-based-on-golang-9-deploy-go-web-application/</guid><description>&lt;p>部署 Go 应用相对简单，因为所有应用代码都被打包成一个二进制文件了（视图模板、静态资源和配置文件等非 Go 代码除外），并且不需要依赖其他库，不需要额外的运行时环境（比如 Java 需要再安装 JVM），也不需要部署额外的 HTTP 服务器。&lt;/p></description></item><item><title>基于Go语言开发在线论坛8-消息、视图和日期时间本地化</title><link>https://shuzang.github.io/development-of-online-forum-based-on-golang-8-message-view-and-date-time-localizationsingleton-mode/</link><pubDate>Sun, 07 Jun 2020 20:30:00 +0800</pubDate><guid>https://shuzang.github.io/development-of-online-forum-based-on-golang-8-message-view-and-date-time-localizationsingleton-mode/</guid><description>&lt;p>由于之前所有页面和消息文本都是英文的，而我们开发的应用基本都是面向中文用户的，所以需要对项目进行本地化，因此本篇介绍如何在 Go Web 应用中进行国际化和本地化编程，由于项目比较简单，只介绍消息提示、视图模板和日期格式的本地化。&lt;/p></description></item><item><title>基于Go语言开发在线论坛7-通过单例模式获取全局配置</title><link>https://shuzang.github.io/development-of-online-forum-based-on-golang-7-get-global-configuration-through-singleton-mode/</link><pubDate>Sun, 07 Jun 2020 16:25:00 +0800</pubDate><guid>https://shuzang.github.io/development-of-online-forum-based-on-golang-7-get-global-configuration-through-singleton-mode/</guid><description>&lt;p>本文介绍如何将敏感信息或可变信息通过配置文件进行配置，然后在应用中读取这些配置文件来获取配置信息。&lt;/p></description></item><item><title>基于Go语言开发在线论坛6-日志与错误处理</title><link>https://shuzang.github.io/development-of-online-forum-based-on-golang-6-log-and-error/</link><pubDate>Sun, 07 Jun 2020 11:03:00 +0800</pubDate><guid>https://shuzang.github.io/development-of-online-forum-based-on-golang-6-log-and-error/</guid><description>&lt;p>到现在为止，我们已经完成了在线论坛项目基本功能的开发，对 Go 语言 Web 编程中如何实现 MVC 架构模式以及 CRUD（数据库增删改查）基本操作有了初步的认识。不过现在所有的日志和错误处理都是杂糅在业务代码中，本篇介绍如何对它们统一进行处理，使得业务代码和日志及错误处理逻辑分离。&lt;/p></description></item><item><title>Golang日志系统</title><link>https://shuzang.github.io/golang-log-system/</link><pubDate>Sun, 07 Jun 2020 09:48:00 +0800</pubDate><guid>https://shuzang.github.io/golang-log-system/</guid><description>&lt;p>日志是一个系统必不可少的部分，本篇介绍Golang中的日志系统。&lt;/p></description></item><item><title>基于Go语言开发在线论坛5-创建群组和主题功能实现</title><link>https://shuzang.github.io/development-of-online-forum-based-on-golang-5-create-thread-and-post/</link><pubDate>Fri, 05 Jun 2020 11:41:00 +0800</pubDate><guid>https://shuzang.github.io/development-of-online-forum-based-on-golang-5-create-thread-and-post/</guid><description>&lt;p>上篇文章基于 Cookie + Session 实现了简单的用户认证功能，用户认证之后，就可以创建群组和主题了，本篇介绍如何创建群组和主题，并将其渲染到前端页面。&lt;/p></description></item><item><title>基于Go语言开发在线论坛4-通过Cookie和Session实现用户认证</title><link>https://shuzang.github.io/development-of-online-forum-based-on-golang-4-user-authentication/</link><pubDate>Thu, 04 Jun 2020 11:01:00 +0800</pubDate><guid>https://shuzang.github.io/development-of-online-forum-based-on-golang-4-user-authentication/</guid><description>&lt;p>上篇演示了首页路由、处理器、视图模板的实现，接着就要实现群组、主题的增删查改，不过，需要在认证后才能执行这些操作，所以本篇介绍如何实现用户认证相关功能。&lt;/p></description></item><item><title>Golang设置与使用cookie</title><link>https://shuzang.github.io/golang-set-and-use-cookie/</link><pubDate>Mon, 01 Jun 2020 20:11:00 +0800</pubDate><guid>https://shuzang.github.io/golang-set-and-use-cookie/</guid><description>&lt;p>关于 Cookie 的使用是 Web 编程中的重要一部分，本篇介绍 Cookie 的基本知识和 Golang 中使用的方法。&lt;/p></description></item><item><title>区块链实验8-实验流程优化及性能测试</title><link>https://shuzang.github.io/experimental-process-optimization-and-performance-test/</link><pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/experimental-process-optimization-and-performance-test/</guid><description>&lt;p>我们对之前的实验流程做了进一步的优化，并且对添加恶意行为检测后的系统进行了进一步的性能测试。&lt;/p></description></item><item><title>Golang模板</title><link>https://shuzang.github.io/golang-template/</link><pubDate>Fri, 29 May 2020 17:08:00 +0800</pubDate><guid>https://shuzang.github.io/golang-template/</guid><description>&lt;p>模板就是在写动态页面时不变的部分，服务端程序渲染可变部分生成动态网页，Go 语言提供了 html/template 包来支持模板渲染。&lt;/p></description></item><item><title>Golang使用gorilla、mux包</title><link>https://shuzang.github.io/golang-use-gorilla/mux-package/</link><pubDate>Fri, 29 May 2020 13:38:00 +0800</pubDate><guid>https://shuzang.github.io/golang-use-gorilla/mux-package/</guid><description>&lt;p>本文介绍 &lt;a href="https://github.com/gorilla/mux" target="_blank" rel="noopener noreffer">gorilla/mux&lt;/a>
包的使用。&lt;/p></description></item><item><title>Golang启动HTTP服务器</title><link>https://shuzang.github.io/golang-start-http-server/</link><pubDate>Fri, 29 May 2020 09:32:00 +0800</pubDate><guid>https://shuzang.github.io/golang-start-http-server/</guid><description>&lt;p>本文介绍 Golang 如何实现 HTTP 服务端及客户端。&lt;/p></description></item><item><title>基于Go语言开发在线论坛3-访问论坛首页</title><link>https://shuzang.github.io/development-of-online-forum-based-on-golang-3-visit-forum-homepage/</link><pubDate>Fri, 29 May 2020 09:08:00 +0800</pubDate><guid>https://shuzang.github.io/development-of-online-forum-based-on-golang-3-visit-forum-homepage/</guid><description>&lt;p>前两篇分别介绍了整体设计及数据表的创建、模型类的编写，本篇了解如何在服务端处理用户请求，并启动论坛首页。文章转自学院君的教程，略有改动。&lt;/p></description></item><item><title>Golang密码学算法</title><link>https://shuzang.github.io/golang-cryptographic-algorithm/</link><pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang-cryptographic-algorithm/</guid><description>&lt;p>在 Go 中，加密是很重要的一部分，本文对此进行介绍。&lt;/p></description></item><item><title>基于Go语言开发在线论坛2-通过模型类与MySQL数据库交互</title><link>https://shuzang.github.io/development-of-online-forum-based-on-golang-2-interact-with-mysql/</link><pubDate>Wed, 27 May 2020 18:25:20 +0800</pubDate><guid>https://shuzang.github.io/development-of-online-forum-based-on-golang-2-interact-with-mysql/</guid><description>&lt;p>在本篇教程中，我们将在 MySQL 中创建一个 &lt;code>chitchat&lt;/code> 数据库作为论坛项目的数据库。我选择了在本地安装 MySQL Server，但也可以基于 Docker 容器运行。转自学院君的教程，略有改动。&lt;/p></description></item><item><title>基于Go语言开发在线论坛1-整体设计与数据模型</title><link>https://shuzang.github.io/development-of-online-forum-based-on-golang-1-overall-design-and-data-model/</link><pubDate>Wed, 27 May 2020 18:12:20 +0800</pubDate><guid>https://shuzang.github.io/development-of-online-forum-based-on-golang-1-overall-design-and-data-model/</guid><description>转自学院君的教程1 ，这里进行复现并深入理解，文章内容可能略有调整。 1. 项目介绍 要完成的是一个简单的在线论坛项目，主要仿照 Google 网上论坛 进行开发，但</description></item><item><title>Golang数据库编程</title><link>https://shuzang.github.io/golang-interact-with-mysql/</link><pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang-interact-with-mysql/</guid><description>Go 官方提供了database 包，database 包下有 sql/driver。该包用来定义操作数据库的接口，这保证了无论使用哪种数据库，操作方</description></item><item><title>Mysql学习6-操作表中数据</title><link>https://shuzang.github.io/mysql-learning-6-data-query-language/</link><pubDate>Sun, 24 May 2020 17:03:00 +0800</pubDate><guid>https://shuzang.github.io/mysql-learning-6-data-query-language/</guid><description>&lt;p>本文详细介绍 &lt;strong>对表中数据&lt;/strong> 的增删查改操作。&lt;/p></description></item><item><title>Mysql学习5-约束与运算符</title><link>https://shuzang.github.io/mysql-learning-5-constraints-and-operators/</link><pubDate>Sun, 24 May 2020 12:10:00 +0800</pubDate><guid>https://shuzang.github.io/mysql-learning-5-constraints-and-operators/</guid><description>&lt;p>约束是一种限制，它通过限制表中的数据，来确保数据的完整性和唯一性。本文介绍 MySQL 的约束和运算符。&lt;/p></description></item><item><title>Mysql学习4-数据表操作</title><link>https://shuzang.github.io/mysql-learning-4-data-manipulation-language/</link><pubDate>Sun, 24 May 2020 11:25:00 +0800</pubDate><guid>https://shuzang.github.io/mysql-learning-4-data-manipulation-language/</guid><description>&lt;p>介绍数据表的基本操作，主要包括创建数据表、查看数据表结构、修改数据表和删除数据表等。&lt;/p></description></item><item><title>Mysql学习3-数据类型和存储引擎</title><link>https://shuzang.github.io/mysql-learning-3-data-type-and-storage-engine/</link><pubDate>Sun, 24 May 2020 10:32:00 +0800</pubDate><guid>https://shuzang.github.io/mysql-learning-3-data-type-and-storage-engine/</guid><description>&lt;p>存储引擎决定数据表的类型，数据表的字段则有自己的数据类型。&lt;/p></description></item><item><title>Mysql学习2-数据库操作</title><link>https://shuzang.github.io/mysql-learning-2-data-definition-language/</link><pubDate>Sun, 24 May 2020 09:17:00 +0800</pubDate><guid>https://shuzang.github.io/mysql-learning-2-data-definition-language/</guid><description>&lt;p>本文介绍对数据库的操作，包括创建、删除、修改等。&lt;/p></description></item><item><title>Mysql学习1-入门</title><link>https://shuzang.github.io/mysql-learning-1-introduction/</link><pubDate>Sun, 24 May 2020 08:02:00 +0800</pubDate><guid>https://shuzang.github.io/mysql-learning-1-introduction/</guid><description>&lt;p>本文介绍数据库和 MySQL的基础知识。得庆幸当初数据库课学的还可以，大部分内容看一眼都能想起来，不需要去理解，就是单纯的忘了一些语句写法。&lt;/p></description></item><item><title>JavaScript学习2-基础语法</title><link>https://shuzang.github.io/javascript-learning-2-basic-syntax/</link><pubDate>Fri, 22 May 2020 17:07:00 +0800</pubDate><guid>https://shuzang.github.io/javascript-learning-2-basic-syntax/</guid><description>各种语言的基础语法部分都很相似，因此这里简单总结一下 1. 变量与常量 尽管以前使用 var 关键字，但现在更多使用 let 关键字声明变量 1 2 3 4 let myName; // 声明 myName = &amp;#39;shuzang&amp;#39;;</description></item><item><title>JavaScript学习1-概览</title><link>https://shuzang.github.io/javascript-learning-1-overview/</link><pubDate>Fri, 22 May 2020 11:50:00 +0800</pubDate><guid>https://shuzang.github.io/javascript-learning-1-overview/</guid><description>JavaScript 是标准 Web 技术的第三层，负责实现动态的行为，比如实现交互式的地图、2D/3D动画、滚动播放的视频等。 JS 的标准是 ECMAScript，2015</description></item><item><title>网络</title><link>https://shuzang.github.io/network/</link><pubDate>Mon, 18 May 2020 17:13:00 +0800</pubDate><guid>https://shuzang.github.io/network/</guid><description>Docker 允许通过外部访问容器或容器互联的方式来提供网络服务。 1. 外部访问容器 容器中可以运行一些网络应用，要让外部也可以访问这些应用，可以通过 -P 或 -p 参</description></item><item><title>镜像、容器与仓库</title><link>https://shuzang.github.io/image-container-and-repository/</link><pubDate>Mon, 18 May 2020 09:00:00 +0800</pubDate><guid>https://shuzang.github.io/image-container-and-repository/</guid><description>&lt;p>Docker 的三个基本概念是镜像（Image）、容器（Container）和仓库（Repository），理解了这三个概念基本就理解了 Docker。&lt;/p></description></item><item><title>函数修饰词pure和view</title><link>https://shuzang.github.io/pure-and-view-keyword/</link><pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/pure-and-view-keyword/</guid><description>转自深入理解Solidity-函数 这两个函数修饰词的作用是告诉编译器函数是否会读取/修改状态，view 表示保证不修改状态，pure 表示保证不</description></item><item><title>可见性与Getter函数</title><link>https://shuzang.github.io/visibility-and-getter-function/</link><pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/visibility-and-getter-function/</guid><description>转自：Solidity 0.6.4 中文文档 Solidity 有两种函数调用：内部调用（Internal Function Calls）和外部调用（External Function Calls）。前者指</description></item><item><title>字符串匹配</title><link>https://shuzang.github.io/string-equality-comparison/</link><pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/string-equality-comparison/</guid><description>翻译自：Fravoll-String Equality Comparison 比较两个给定字符串是否相等，是 Solidity 编程中最常见的一种情况，但语言本身并没有提供内置函数用于字符串比较，</description></item><item><title>算法-回溯</title><link>https://shuzang.github.io/algorithm-backtracking/</link><pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/algorithm-backtracking/</guid><description>在真实的世界中，很多问题是不存在快速解法的，只能穷尽搜索，因此一个高效的搜索技术非常重要。回溯（Backtracking）和分支限界（Bra</description></item><item><title>算法-贪心</title><link>https://shuzang.github.io/algorithm-greedu/</link><pubDate>Sun, 03 May 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/algorithm-greedu/</guid><description>&lt;p>贪心是一种策略，是一种总是寻求当前最优的策略。因为贪心只关心局部的最优，因此不是总能得到全局的最优解，所以我们选择贪心解决问题时必须保证状态的独立性，即当前最优值只与当前状态有关，不会影响以后的状态。&lt;/p></description></item><item><title>算法-动态规划</title><link>https://shuzang.github.io/algorithm-dynamic-programming/</link><pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/algorithm-dynamic-programming/</guid><description>&lt;p>动态规划策略通常用于求解最优化问题。在这类问题中，可能会有许多可行解，每个解对应一个值，我们希望找到具有最优值的那个解，也就是最优解。当题目中涉及「最大」「最小」等词时，很有可能就是这类问题，要考虑是否可用动态规划求解。&lt;/p></description></item><item><title>区块链实验7-恶意行为检测机制设计</title><link>https://shuzang.github.io/credit-based-mechanism/</link><pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/credit-based-mechanism/</guid><description>&lt;p>吸收了一些新论文的想法，对原访问控制系统功能做了补充，添加了恶意行为检测（或者称为动态访问控制），目的是减少恶意行为，增加合法行为在区块链中得到确认的几率。所有调整总结查看 &lt;a href="#jump" rel="noopener noreffer">附录I&lt;/a>
。&lt;/p></description></item><item><title>2018-2020 研究历史</title><link>https://shuzang.github.io/2018-2020-research-history/</link><pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/2018-2020-research-history/</guid><description>本文总结2018年12月到2020年4月的研究工作历史，不包括论文阅读工作。 2018.12 区块链主流共识算法收集了解和分析 IIoT 与区块链结合的场景收集和一些</description></item><item><title>Win10 Home版安装Docker Desktop on Windows</title><link>https://shuzang.github.io/install-docker-desktop-on-windows-10-home/</link><pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/install-docker-desktop-on-windows-10-home/</guid><description>Docker Desktop 是 Windows 安装 Docker 的推荐安装方式，然而系统需求是 Pro, Enterprise 或 Education 版本，Home 版不支持，因为没有 Hyper-V。 这篇文章记录网上找到的 Win10 Home 版安装 Docker Desktop 的方</description></item><item><title>使用 Docker 安装运行 mysql</title><link>https://shuzang.github.io/using-docker-installation-to-run-mysql/</link><pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/using-docker-installation-to-run-mysql/</guid><description>Docker Hub 中的 mysql 镜像 地址为 https://hub.docker.com/_/mysql，安装运行过程如下。 1. 拉取镜像 1 2 3 4 5 6 $ docker pull mysql # 查看 $ docker</description></item><item><title>An Attribute-Based Distributed Access Control for Blockchain-enabled IoT</title><link>https://shuzang.github.io/an-attribute-based-distributed-access-control-for-blockchain-enabled-iot/</link><pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/an-attribute-based-distributed-access-control-for-blockchain-enabled-iot/</guid><description>P. Wang, Y. Yue, W. Sun, and J. Liu, “An Attribute-Based Distributed Access Control for Blockchain-enabled IoT,” in 2019 International Conference on Wireless and Mobile Computing, Networking and Communications (WiMob), Barcelona, Spain, Oct. 2019, pp. 1–6, doi: 10.1109/WiMOB.2019.8923232 . 第一作者是西电的，国家自然科学基金项目成果，</description></item><item><title>Attribute-Based Access Control</title><link>https://shuzang.github.io/attribute-based-access-control/</link><pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/attribute-based-access-control/</guid><description>V. C. Hu, D. R. Kuhn, and D. F. Ferraiolo, “Attribute-Based Access Control,” Computer, vol. 48, no. 2, pp. 85–88, Feb. 2015, doi: 10.1109/MC.2015.33 . 1. 引言 传统的访问控制基于用户身份（</description></item><item><title>Supply Chain Management Automation using Wireless Sensor Networks</title><link>https://shuzang.github.io/supply-chain-management-automation-using-wireless-sensor-networks/</link><pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/supply-chain-management-automation-using-wireless-sensor-networks/</guid><description>L. Evers and P. Havinga, “Supply Chain Management Automation using Wireless Sensor Networks,” in 2007 IEEE Internatonal Conference on Mobile Adhoc and Sensor Systems, Pisa, Italy, Oct. 2007, pp. 1–3, doi: 10.1109/MOBHOC.2007.4428689 . 注：插图来自原论文和网络。 1. 引言 这篇论</description></item><item><title>Blockchain and Deep Reinforcement Learning Empowered Intelligent 5G Beyond</title><link>https://shuzang.github.io/blockchain-and-deep-reinforcement-learning-empowered-intelligent-5g-beyond/</link><pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/blockchain-and-deep-reinforcement-learning-empowered-intelligent-5g-beyond/</guid><description>Day Y, Xu D, Maharjan S, 等. Blockchain and Deep Reinforcement Learning Empowered Intelligent 5G Beyond[J]. IEEE Network, 2019, 33(3): 10–17. DOI:10.1109/MNET.2019.1800376 . 1. 引言 区块链和 AI 会在 6G 中扮演关键角色，前者可保证分布式网络安全，后者可用于智能资源</description></item><item><title>算法-分治</title><link>https://shuzang.github.io/algorithm-divide-and-conquer/</link><pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/algorithm-divide-and-conquer/</guid><description>分治，字面意思就是分而治之，意思就是把一个复杂的问题分成两个或更多个相同或相似的子问题，解决子问题后再进行合并。典型的如归并排序和快排，都是</description></item><item><title>算法-递归</title><link>https://shuzang.github.io/algorithm-recursive/</link><pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/algorithm-recursive/</guid><description>&lt;p>首先简单阐述一下递归、分治、动态规划和贪心这几个东西的区别和联系。&lt;/p>
&lt;ol>
&lt;li>递归是一种编程技巧，一种解决问题的思维方式；&lt;/li>
&lt;li>分治和动态规划是建立在递归基础上的，解决更具体问题的两类算法思想（实现动态规划大都不是递归的，但是过程和思想是）；&lt;/li>
&lt;li>贪心是动态规划的一个子集，可以更高效解决一部分更特殊的问题。&lt;/li>
&lt;/ol></description></item><item><title>关于个性化广告</title><link>https://shuzang.github.io/about-personalized-advertising/</link><pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/about-personalized-advertising/</guid><description>各主流平台提供了关闭个性化广告的功能，但操作一番之后发现，一是关闭入口藏的比较深给，二是我们反感的其实不是个性化广告，而是过多的广告和收集的</description></item><item><title>关于是否进行文档整理</title><link>https://shuzang.github.io/about-whether-to-organize-documents/</link><pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/about-whether-to-organize-documents/</guid><description>文档的整理真的非常非常消耗时间，在近两年的博客写作过程中我逐渐发现，有些东西是没有必要进行记录的。关于是否作为文章写作以及是否收集到知识体系</description></item><item><title>冷知识收集</title><link>https://shuzang.github.io/cold-knowledge-collection/</link><pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/cold-knowledge-collection/</guid><description>玻璃能抵御热成像 有些蜂蜜有毒，取决于蜜蜂采的是不是有毒的花，有毒的蜜一般尝起来比较苦涩</description></item><item><title>阶段总结7-区块链与D2D内容缓存/计算卸载</title><link>https://shuzang.github.io/blockchain-for-d2d-cache-or-computing-offload/</link><pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/blockchain-for-d2d-cache-or-computing-offload/</guid><description>1. 概念引入 论文1提到，一些邻近的用户设备（User Equipment, UE）组合其计算能力，在本地服务于具有更高性能需求的应用可以叫做 ad-hoc cloud。实际应用需</description></item><item><title>算法-排序</title><link>https://shuzang.github.io/algorithm-sort/</link><pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/algorithm-sort/</guid><description>排序算法分为内部排序（待排序记录存放在内存中进行的排序过程）和外部排序（由于待排序记录数量大，以致内存一次不能容纳全部记录，在排序过程中需要</description></item><item><title>算法-搜索</title><link>https://shuzang.github.io/algorithm-search/</link><pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/algorithm-search/</guid><description>&lt;p>搜索是最常用的算法之一，但线性的搜索进行介绍没有太大的意义，本文介绍搜索中一种广为使用的方法：二分查找。&lt;/p></description></item><item><title>图配文</title><link>https://shuzang.github.io/%E5%9B%BE%E9%85%8D%E6%96%87/</link><pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E5%9B%BE%E9%85%8D%E6%96%87/</guid><description>有些图片，配了文字之后才显现它的力量 1、你所浪费的今日，是昨日死去之人奢望的明日。你所厌恶的现在，是未来的你回不去的曾经 2、20岁那年买得起</description></item><item><title>算法-数组类问题</title><link>https://shuzang.github.io/algorithm-array/</link><pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/algorithm-array/</guid><description>数组的访问时间为 $O(1)$，这是它最大的优势，但限于数组固定的大小，平常使用最多的是动态数组。在 Golang 中，其实就是[切片]^(slice)，动</description></item><item><title>触动人心的句子</title><link>https://shuzang.github.io/%E8%A7%A6%E5%8A%A8%E4%BA%BA%E5%BF%83%E7%9A%84%E5%8F%A5%E5%AD%90/</link><pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E8%A7%A6%E5%8A%A8%E4%BA%BA%E5%BF%83%E7%9A%84%E5%8F%A5%E5%AD%90/</guid><description>记录一些触动人心的句子 1、一寸山河一寸血，十万青年十万军 2、因为不知道下辈子还能不能遇到，所以这辈子拼命给你温暖给你拥抱 3、人有贫富，但无贵</description></item><item><title>数据结构-并查集</title><link>https://shuzang.github.io/data-structure-union-find-set/</link><pubDate>Wed, 18 Mar 2020 18:44:00 +0800</pubDate><guid>https://shuzang.github.io/data-structure-union-find-set/</guid><description>&lt;p>并查集是一种特别而实用的结构，主要作用是进行不相交集合的合并和判断两个元素是否在同一集合，时间复杂度为常数级。常见用途包括 Kruskal 算法和求最近公共祖先，本篇文章介绍该数据结构。&lt;/p></description></item><item><title>数据结构-B树与红黑树</title><link>https://shuzang.github.io/data-structure-b-tree-and-red-black-tree/</link><pubDate>Wed, 18 Mar 2020 09:21:00 +0800</pubDate><guid>https://shuzang.github.io/data-structure-b-tree-and-red-black-tree/</guid><description>&lt;p>本篇介绍B树（B-树），B+树和红黑树，参考自陈小玉，《趣学数据结构》。&lt;/p></description></item><item><title>数据结构-图</title><link>https://shuzang.github.io/data-structure-graph/</link><pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/data-structure-graph/</guid><description>链表是一种一对一的关系，树是一种一对多的关系，图则是一种多对多的关系。实际上，我们可以将链表和树都看作图的一部分。 1. 图的定义 用 V(Vertex) 表示顶点的集</description></item><item><title>面对疫情区块链可以做些什么</title><link>https://shuzang.github.io/what-can-blockchain-do-during-the-covid-19/</link><pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/what-can-blockchain-do-during-the-covid-19/</guid><description>这场年初爆发的疫情在国内控制住以后，反而开始在全世界其它国家蔓延，如大数据、5G等技术均在当前这场疫情中产生了自己的作用，区块链能做些什么，</description></item><item><title>文献管理工具 Zotero 学习指南</title><link>https://shuzang.github.io/%E6%96%87%E7%8C%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-zotero-%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/</link><pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E6%96%87%E7%8C%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-zotero-%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/</guid><description>在文献管理方面的需求包括： 文献可以方便地导入工具中并提取准确丰富地文献信息 工作和学习时，可以快速在工具中找到自己想要的文献 在写作时，可以方便</description></item><item><title>数据结构-堆</title><link>https://shuzang.github.io/data-structure-heap/</link><pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/data-structure-heap/</guid><description>&lt;p>普通的队列是一种先进先出的数据结构，在此基础上，还有一种叫做 &lt;strong>优先队列&lt;/strong> 的结构。顾名思义，优先队列就是具有优先级的队列，其中，元素被赋予优先级，具有最高优先级的元素将最先被访问。&lt;/p></description></item><item><title>波士顿犹太人屠杀纪念碑碑文</title><link>https://shuzang.github.io/engraved-in-st-pauls-church-in-1962/</link><pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/engraved-in-st-pauls-church-in-1962/</guid><description>波士顿犹太人大屠杀遇难犹太人纪念碑位于该市市中心的小公园中，由六个玻璃空心塔组成，塔壁上刻有集中营囚徒代号和幸存者的语录。在玻璃空心塔的旁边</description></item><item><title>雕刀</title><link>https://shuzang.github.io/%E9%9B%95%E5%88%80/</link><pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E9%9B%95%E5%88%80/</guid><description>纵然 你已去远 想此刻又已隔了几重山 我依然停顿在水流的中央 努力回溯 那刚刚过去的时光 想你从千里之遥奔赴到我的身边 原也只为了这一刻的低徊和缱绻 从云到</description></item><item><title>数据结构-二叉搜索树</title><link>https://shuzang.github.io/data-structure-binary-search-tree/</link><pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/data-structure-binary-search-tree/</guid><description>二叉搜索树是二叉树的一种特殊形式，由于它对查找的良好特性，使用较为广泛，本篇文章我们对其进行介绍，同时也包括二叉搜索树的各种进阶，比如二叉平</description></item><item><title>数据结构-二叉树</title><link>https://shuzang.github.io/data-structure-tree-and-binary-tree/</link><pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/data-structure-tree-and-binary-tree/</guid><description>树是反映事物之间层次关系的一种结构，比如家谱树、硬盘目录结构树等。 使用树的原因是这种层次结构在管理上有更高的效率，以查找为例，顺序查找的时间</description></item><item><title>数据结构-队列与栈</title><link>https://shuzang.github.io/data-structure-queue-and-stack/</link><pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/data-structure-queue-and-stack/</guid><description>&lt;p>队列与栈是最常使用的两种数据结构，其中，队列的核心特征是先入先出，栈的核心特征是后入先出，只要符合这两个特征，就属于队列（栈），不因实现形式的不同（数组或链表）而有差别，可以根据具体情况选择使用起来更方便的实现形式。&lt;/p>
&lt;p>在本文中，我们对队列与栈的核心功能，循环队列这种特殊结构，以及队列和栈的主要应用，尤其是广度优先搜索和深度优先搜索进行介绍。&lt;/p></description></item><item><title>数据结构-链表</title><link>https://shuzang.github.io/data-structure-linkedlist/</link><pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/data-structure-linkedlist/</guid><description>链表是一种最为基础的数据结构，由一系列结点组成，每个结点不仅包含值，还包含指向下一个结点（有时也包括上一个结点）的指针。相比于数组，在链表中</description></item><item><title>时间不够用怎么办</title><link>https://shuzang.github.io/how-to-do-if-no-enough-time/</link><pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/how-to-do-if-no-enough-time/</guid><description>我现在面临的一个重要问题是：想做的事情太多，而时间不够用。 六千年的人类文明史，创造了一个难以想象的庞大知识体系，到现在，人类社会已经形成了一</description></item><item><title>LVChain： A Lightweight and Vote-based Blockchain for Access Control in the IoT</title><link>https://shuzang.github.io/lvchain-a-lightweight-and-vote-based-blockchain-for-access-control-in-the-iot/</link><pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/lvchain-a-lightweight-and-vote-based-blockchain-for-access-control-in-the-iot/</guid><description>Yu, Yue &amp;amp; Zhang, Sheng &amp;amp; Chen, Chao &amp;amp; Zhong, Xiaoxiong. (2018). LVChain: A Lightweight and Vote-based Blockchain for Access Control in the IoT. 870-874. DOI: 10.1109/CompComm.2018.8780687 KeyWord: IoT, security, Blockchain, access authorization, BLE-based devies 注：插图经过重新绘制，照片来自原论文截图。 1. 引言 IoT与生活联系的越来</description></item><item><title>Efficient Distributed Authentication and Access Control System</title><link>https://shuzang.github.io/efficient-distributed-authentication-and-access-control-system/</link><pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/efficient-distributed-authentication-and-access-control-system/</guid><description>Benhadj Djilali H., Tandjaoui D. (2019) Efficient Distributed Authentication and Access Control System Management for Internet of Things Using Blockchain. In: Renault É., Boumerdassi S., Leghris C., Bouzefrane S. (eds) Mobile, Secure, and Programmable Networking. MSPN 2019. Lecture Notes in Computer Science, vol 11557. Springer, Cham DOI：https://doi.org/10</description></item><item><title>A Blockchain based access control for IoT</title><link>https://shuzang.github.io/a-blockchain-based-access-control-for-iot/</link><pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/a-blockchain-based-access-control-for-iot/</guid><description>Imen Riabi, Yosr Dhif, Hella Kaffel Ben Ayed, Khaled Zaatouri. A Blockchain based access control for IoT[C]. International Wireless Communications &amp;amp; Mobile Computing Conference (IWCMC), 2019. DOI: 10.1109/IWCMC.2019.8766506 Keywords: Access control, Blockchain, Smart Contract, Internet of Things 注：本文图片来自原论文。 1. 引入 作者的考虑主要基于三点 传统中心化的访</description></item><item><title>生活技能10-租房注意事项</title><link>https://shuzang.github.io/life-skills-10-notes-on-renting/</link><pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/life-skills-10-notes-on-renting/</guid><description>租房是现在和未来几年逃不开的话题，这里总结租房时要注意的事情 找房子 可以通过熟人、网络、小区广告等了解情况，节省费用，但耗时耗力。 找中介是可以</description></item><item><title>win10效率优化5-系统功能的充分利用</title><link>https://shuzang.github.io/efficient-use-of-win10-5-system-function-use/</link><pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/efficient-use-of-win10-5-system-function-use/</guid><description>作为一款成熟的商业系统，windows提供了大量实用的功能，尤其是到了win10后，很多功能的体验变得越来越好，本篇对这些功能做总结。 值得注</description></item><item><title>win10效率优化6-软件体系整理</title><link>https://shuzang.github.io/efficient-use-of-win10-6-software-collection/</link><pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/efficient-use-of-win10-6-software-collection/</guid><description>对win10中使用的软件体系进行整理，在满足需要的同时，选择每一类软件中最适合的一种，同时尽量减少安装的软件数量。 1. 系统管理 1.1 火绒 抛弃腾讯和</description></item><item><title>win10效率优化4-文件管理</title><link>https://shuzang.github.io/efficient-use-of-win10-4-file-management/</link><pubDate>Fri, 17 Jan 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/efficient-use-of-win10-4-file-management/</guid><description>文件管理是效率提升、电子资料极简化的重要部分，本文探索如何有效的对win10中的文件进行管理，核心包括三部分：分类、命名和备份。 1. 分类 win</description></item><item><title>区块链实验6-实验场景的分析与选择</title><link>https://shuzang.github.io/analysis-and-selection-of-experimental-scenes/</link><pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/analysis-and-selection-of-experimental-scenes/</guid><description>&lt;p>考虑到开题时老师给的意见和编写论文的需要，这里再分析一次场景，并选择一个合适的纳入实验。&lt;/p></description></item><item><title>Ubuntu中无法获得锁相关问题的解决方案</title><link>https://shuzang.github.io/ubuntu%E4%B8%AD%E6%97%A0%E6%B3%95%E8%8E%B7%E5%BE%97%E9%94%81%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link><pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/ubuntu%E4%B8%AD%E6%97%A0%E6%B3%95%E8%8E%B7%E5%BE%97%E9%94%81%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid><description>Ubuntu环境下，Unable to acquire the lock这类问题时有发生，本文对该问题的解决方案做一个总结 E: Could not get lock /var/lib/dpkg/lock-frontend - open (11: Resource temporarily unavailable) E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is</description></item><item><title>Address checksum</title><link>https://shuzang.github.io/address-checksum/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/address-checksum/</guid><description>在智能合约中显式传入地址类型时，可能会出现如下错误 Address checksum This looks like an address but has an invalid checksum. If this is not used as an address, please prepend &amp;lsquo;00&amp;rsquo;. 关于该问题的一个讨论见 https://github.com/ethereum/EIPs/issues/55 这是因为合约中现在使</description></item><item><title>总有些美好的事情发生</title><link>https://shuzang.github.io/%E6%80%BB%E6%9C%89%E4%BA%9B%E7%BE%8E%E5%A5%BD%E7%9A%84%E4%BA%8B%E6%83%85%E5%8F%91%E7%94%9F/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E6%80%BB%E6%9C%89%E4%BA%9B%E7%BE%8E%E5%A5%BD%E7%9A%84%E4%BA%8B%E6%83%85%E5%8F%91%E7%94%9F/</guid><description>总有些美好的事情发生 有些美好的人活着 哪怕我不曾遇见 哪怕不发生在我身上 这样的事啊 只想一想，就不孤独</description></item><item><title>Golang语法基础12-测试</title><link>https://shuzang.github.io/golang-syntax-12-test/</link><pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang-syntax-12-test/</guid><description>实际开发中对代码进行测试是不可缺少的工作，在go中可以通过testing包来进行代码的测试。testing包和go test命令相互配合，能够</description></item><item><title>Golang语法基础11-错误处理</title><link>https://shuzang.github.io/golang-syntax-11-error-and-panic/</link><pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang-syntax-11-error-and-panic/</guid><description>&lt;p>Go中有两套错误处理的方式&lt;/p>
&lt;ul>
&lt;li>普通错误： 在函数和方法中返回错误对象作为它们的唯一或最后一个返回值 ，如果返回nil，表示没有错误&lt;/li>
&lt;li>异常：使用panic和recover&lt;/li>
&lt;/ul>
&lt;p>主调函数总是应该检查收到的错误，不要忽略，否则可能导致严重的后果。&lt;/p></description></item><item><title>linux系统时间同步</title><link>https://shuzang.github.io/linux%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</link><pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/linux%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</guid><description>虚拟机长时间不开机，系统时间和当前时间不同步，导致很多操作被拒绝，这里记录如何主动同步系统的时间和网络时间 正文 设置系统时区 1 $ timedatectl set-timezone Asia/Shanghai 安装nt</description></item><item><title>Golang语法基础10-协程与通道</title><link>https://shuzang.github.io/golang-syntax-10-goroutine-and-channel/</link><pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang-syntax-10-goroutine-and-channel/</guid><description>首先来回顾在操作系统中学过的一些概念。进程(processes)是程序执行的基本单位，运行在一个独立的内存地址空间中；一个进程由多个线程(t</description></item><item><title>生活技能9-保养、收纳及旧衣处理</title><link>https://shuzang.github.io/life-skills-9-maintenance-storage-and-disposal-of-used-clothes/</link><pubDate>Sun, 08 Dec 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/life-skills-9-maintenance-storage-and-disposal-of-used-clothes/</guid><description>正确的使用和保养可以延长衣物的使用时间，并使衣物看起来整洁干净，下面就对这些步骤做整理和介绍。 1. 概述 整篇文章的思路是根据面料进行处理，但最终</description></item><item><title>区块链实验5-优化系统的实现与测试</title><link>https://shuzang.github.io/optimize-the-implementation-and-testing-of-the-system/</link><pubDate>Fri, 06 Dec 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/optimize-the-implementation-and-testing-of-the-system/</guid><description>&lt;p>本文是方案优化部分的第二篇，此时已经根据上一篇的思路完成了对合约代码的重新编写，本篇对优化后的系统进行测试。&lt;/p></description></item><item><title>生活技能8-穿衣风格养成及衣服购买</title><link>https://shuzang.github.io/life-skills-8-clothing-style-development-and-clothing-purchase/</link><pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/life-skills-8-clothing-style-development-and-clothing-purchase/</guid><description>1. 体型分类 将人的体型分为健壮、肥胖、瘦弱三大类和身高较矮、头较大两种小类别。 1.1 健壮体型 选择大号服装会容易给人比较胖的错觉，为了突出体型优势，</description></item><item><title>区块链方向的期刊、会议和基金收集</title><link>https://shuzang.github.io/conference-journal-and-foundation-information-in-blockchain-field/</link><pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/conference-journal-and-foundation-information-in-blockchain-field/</guid><description>如题，本文只关注重点的几方面 收录区块链的期刊、会议列表（将中国的单独分离） 期刊专题和会议的征稿通知，从中发现当前热点研究领域 基金项目信息中的</description></item><item><title>文献检索常识</title><link>https://shuzang.github.io/academic-basic-knowledge/</link><pubDate>Tue, 03 Dec 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/academic-basic-knowledge/</guid><description>1. 常用名词 与学术研究和论文相关的，有许多常用的名词，本节对这些名词作解释和区分。 会议组织者：可能是某个学校或某个组织，为了学术或经济利益举办</description></item><item><title>近三年区块链方向论文发表情况总结</title><link>https://shuzang.github.io/analysis-of-papers-published-in-blockchain-field/</link><pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/analysis-of-papers-published-in-blockchain-field/</guid><description>原始的目的是统计一下国内区块链研究现状，但开始这一工作时决定顺便把其它的统计数据也一并记录下来。数据来自 Web of Science核心合集 ，即SCI</description></item><item><title>生活技能7-面料及服装分类</title><link>https://shuzang.github.io/life-skills-7-fabric-and-clothing-classification/</link><pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/life-skills-7-fabric-and-clothing-classification/</guid><description>衣食住行，衣排第一，虽然我们从出生开始就与衣物打交道，但这方面的知识除了相关行业从业人员鲜少有人去了解。但掌握一些基础的知识可以为我们日常挑</description></item><item><title>阶段总结6-区块链用于物联网访问控制</title><link>https://shuzang.github.io/blockchain-based-access-control-for-iot/</link><pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/blockchain-based-access-control-for-iot/</guid><description>1. 背景 针对传统物联网访问控制的局限性，区块链具有如下优点，这些优点多是基于分布式、不可篡改、可追溯等特性。 保证访问权限归属于用户。这点其实主</description></item><item><title>Golang语法基础8-结构体与方法</title><link>https://shuzang.github.io/golang-syntax-8-struct-and-method/</link><pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang-syntax-8-struct-and-method/</guid><description>&lt;p>结构体是一种非常重要的结构，用到的地方非常多，在 Go 中，结构体还是实现面向对象编程的基础。&lt;/p></description></item><item><title>Golang语法基础9-接口与反射</title><link>https://shuzang.github.io/golang-syntax-9-interface-and-reflect/</link><pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang-syntax-9-interface-and-reflect/</guid><description>&lt;p>本篇介绍 Golang 中的接口与反射。&lt;/p></description></item><item><title>区块链方向有参考价值的文章收集</title><link>https://shuzang.github.io/articles-about-blockchain/</link><pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/articles-about-blockchain/</guid><description>很多区块链领域极有启发性的文章或者介绍极为详细的文章都很值得保存，以前直接将文章完整的转载过来，但最近发现这种方法占用空间而且毫无意义，因此</description></item><item><title>Golang语法基础7-函数</title><link>https://shuzang.github.io/golang-syntax-7-function/</link><pubDate>Mon, 25 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang-syntax-7-function/</guid><description>1. 函数声明与定义 Go中有三种类型的函数： 普通的带有名字的函数 匿名函数 方法（Methods，在结构体部分介绍） 普通函数声明的基本格式为 1 func functionName(param1 type1,</description></item><item><title>生活技能6-医保及就医</title><link>https://shuzang.github.io/life-skills-6-medical-insurance-and-medical-treatment/</link><pubDate>Sat, 23 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/life-skills-6-medical-insurance-and-medical-treatment/</guid><description>上一篇对五险一金的介绍中已经提到了医保，本篇继续了解医保相关知识，以及医院等级、分类和就医流程。本文基本内容来自国家医疗保障局官网 和网络。 1.</description></item><item><title>Golang语法基础6-数组、切片与映射</title><link>https://shuzang.github.io/golang-syntax-6-array-slice-and-map/</link><pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang-syntax-6-array-slice-and-map/</guid><description>只有基本的数据类型无法适应所有的情况，当需要存储和处理大量数据时，通常会使用数组、映射、链表等数据结构，称之为容器(container)。在</description></item><item><title>hugo搭建个人博客5-博客收集</title><link>https://shuzang.github.io/hugo-blog-themes-collection/</link><pubDate>Sun, 17 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/hugo-blog-themes-collection/</guid><description>本文用来收集喜欢的主题和有参考价值的博客(使用Hexo或Hugo的)。 主题 LeaveIt KeepIt LoveIt AllinOne hexo-theme-pure hexo-theme-Chic 博客 Yearito&amp;rsquo;s Blog 深入浅出区块链 Sirice&amp;rsquo;s Blog Mogeko&amp;rsquo;s Blog Wyane&amp;rsquo;s Blog Dillon&amp;rsquo;s Blog Orianna的</description></item><item><title>An ABAC Model in RFID Systems Based on DApp for Healthcare Environments</title><link>https://shuzang.github.io/an-abac-model-in-rfid-systems-based-on-dapp-for-healthcare-environments/</link><pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/an-abac-model-in-rfid-systems-based-on-dapp-for-healthcare-environments/</guid><description>Figueroa, Añorga, and Arrizabalaga, “An Attribute-Based Access Control Model in RFID Systems Based on Blockchain Decentralized Applications for Healthcare Environments,” Computers, vol. 8, no. 3, p. 57, Jul. 2019, doi: 10.3390/computers8030057 . Keywords: blockchain, smart contract, RFID, ABAC, access control, IoT, healthcare 1. 引言 在医疗领</description></item><item><title>Golang语法基础5-字符串操作与输入输出</title><link>https://shuzang.github.io/golang-syntax-5-string-input-and-output/</link><pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang-syntax-5-string-input-and-output/</guid><description>&lt;p>本篇介绍字符串的相关操作，涉及&lt;code>string&lt;/code>和&lt;code>strconv&lt;/code>两个标准库，以及介绍输入输出的基本方法，涉及&lt;code>fmt&lt;/code>和&lt;code>bufio&lt;/code>两个标准库。&lt;/p></description></item><item><title>生活技能5-经济学常识</title><link>https://shuzang.github.io/life-skills-5-insurances-and-public-housing-fund/</link><pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/life-skills-5-insurances-and-public-housing-fund/</guid><description>经济是每个人都躲不开的东西，作为普通人，搞懂一些生活中的经济常识，能帮助我们活得更明白一点，这些知识包括缴税、理财、买房、养老、生育、贷款等</description></item><item><title>合约间调用</title><link>https://shuzang.github.io/call-between-contracts/</link><pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/call-between-contracts/</guid><description>之前的实验合约间的调用没有成功，这次就仔细地研究一下合约间地调用机制。分为两种情况 调用者和被调用者在一个sol文件中 调用者和被调用者在不同的</description></item><item><title>生活技能3-急救知识</title><link>https://shuzang.github.io/life-skills-3-first-aid-knowledge/</link><pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/life-skills-3-first-aid-knowledge/</guid><description>日常生活中会遇到不少突发事件，如运动受伤、烧伤、溺水、中毒等，掌握一些常见的急救知识，并且在意外发生时沉着冷静，及时进行处理，可以减轻自己或</description></item><item><title>生活技能4-家庭常备药和工具</title><link>https://shuzang.github.io/life-skills-4-family-standing-medicines-and-tools/</link><pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/life-skills-4-family-standing-medicines-and-tools/</guid><description>首先要知道可以买到的药物分为两种，一种是处方药，必须看医生才能买到，一种是非处方药，非处方药的包装上一般都有一个椭圆形标志，其中写着OCT，</description></item><item><title>Truffle框架安装使用</title><link>https://shuzang.github.io/truffle%E6%A1%86%E6%9E%B6%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</link><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/truffle%E6%A1%86%E6%9E%B6%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</guid><description>Truffle和Ganache的安装使用 1. 安装Truffle 在Ubuntu18.04 下安装运行，要求Node.js版本高于v8.9.4 1 2 3</description></item><item><title>区块链实验4-原型系统问题总结及优化考虑</title><link>https://shuzang.github.io/summary-of-problems-and-optimization-considerations-about-prototype-system/</link><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/summary-of-problems-and-optimization-considerations-about-prototype-system/</guid><description>本文是方案优化部分的第一篇，介绍在论文复现过程中发现的一些问题和自己产生的一些想法。 与原论文1设计架构的对比可以查看本文最后的对比表，点这里</description></item><item><title>Golang语法基础4-运算符与流程控制</title><link>https://shuzang.github.io/golang-syntax-4-operators-and-flow-control/</link><pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang-syntax-4-operators-and-flow-control/</guid><description>&lt;p>本文介绍 Golang 中的运算符和流程控制&lt;/p></description></item><item><title>Istanbul Byzantine Fault Tolerance</title><link>https://shuzang.github.io/istanbul-byzantine-fault-tolerance/</link><pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/istanbul-byzantine-fault-tolerance/</guid><description>AMIS公司提出的Istanbul Byzantine Fault Tolerance Consensus（简称IBFT或Istanbul BFT），是一个基于PBFT的交易一致性的共识。因</description></item><item><title>SEC-BlockEdge Security Threats in Blockchain-Edge based IIoT Network</title><link>https://shuzang.github.io/sec-blockedge-security-threats-in-blockchain-edge-based-iiot-network/</link><pubDate>Thu, 24 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/sec-blockedge-security-threats-in-blockchain-edge-based-iiot-network/</guid><description>Kumar, Tanesh &amp;amp; Braeken, An &amp;amp; Ramani, Vidhya &amp;amp; Ahmad, Ijaz &amp;amp; Harjula, Erkki &amp;amp; Ylianttila, Mika. (2019). SEC-BlockEdge: Security Threats in Blockchain-Edge based Industrial IoT Networks. 以一个木屋建造场景作为IIoT用例，简要介绍了一个区块链-边缘计算框架。然后以此为基础</description></item><item><title>然后，我就一个人了</title><link>https://shuzang.github.io/%E7%84%B6%E5%90%8E%E6%88%91%E5%B0%B1%E4%B8%80%E4%B8%AA%E4%BA%BA%E4%BA%86/</link><pubDate>Thu, 24 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E7%84%B6%E5%90%8E%E6%88%91%E5%B0%B1%E4%B8%80%E4%B8%AA%E4%BA%BA%E4%BA%86/</guid><description>2019.10.24 从社交平台看到有人分享的山本文绪关于一个人生活的描写，起了兴趣，遂决定读一读。 山本文绪笔下一个人的生活： 我很喜欢一个人在家喝酒。先把房间打</description></item><item><title>Win10效率优化3-桌面整理</title><link>https://shuzang.github.io/efficient-use-of-win10-3-desktop-management/</link><pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/efficient-use-of-win10-3-desktop-management/</guid><description>对任何系统来讲，桌面的整理都是重中之重。有些人喜欢文件触手可及，所有东西都放在桌面。有些人喜欢极简美观，桌面一尘不染，全部通过快速搜索完成。</description></item><item><title>Golang语法基础3-常量变量与基本数据类型</title><link>https://shuzang.github.io/golang-syntax-3-constants-variables-and-elementary-types/</link><pubDate>Tue, 22 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang-syntax-3-constants-variables-and-elementary-types/</guid><description>&lt;p>本文介绍 Go 中的常量、变量、基本数据类型和常用的类型转换。&lt;/p></description></item><item><title>Win10效率优化1-综述</title><link>https://shuzang.github.io/efficient-use-of-win10-1-overview/</link><pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/efficient-use-of-win10-1-overview/</guid><description>得益于苹果的生态，MacOS上的优秀软件不少，因此网上存在大量介绍如何利用Mac有效率的学习、工作和生活的文章。但对于Win10来说，这方面</description></item><item><title>Win10效率优化2-锁屏与登录</title><link>https://shuzang.github.io/efficient-use-of-win10-2-lockscreen-and-login/</link><pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/efficient-use-of-win10-2-lockscreen-and-login/</guid><description>Win10 系统中，锁屏是我们登录系统前看到的一个界面。它的作用是当我们暂时离开电脑时阻止别人操作，但早晨当我们打开电脑时，第一眼看到也是锁屏界面，因</description></item><item><title>生活技能2-生活中的常见疾病</title><link>https://shuzang.github.io/life-skills-2-common-disease/</link><pubDate>Sun, 20 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/life-skills-2-common-disease/</guid><description>对人体结构、常见疾病的了解应该是一个人的基本生活能力，之前已经对用眼、睡眠、口腔的相关知识作了了解，这里对人体结构及重要器官分布，常见疾病作</description></item><item><title>张氏帅府及沈阳金融博物馆</title><link>https://shuzang.github.io/commander-zhangs-mansion/</link><pubDate>Fri, 18 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/commander-zhangs-mansion/</guid><description>时隔五年重游大帅府，早已物是人非。18年95周年校庆的时候东大与大帅府签了合约，共庆华诞，邀请全球校友回返参观。一年之后，19年10月，东大</description></item><item><title>信仰</title><link>https://shuzang.github.io/%E4%BF%A1%E4%BB%B0/</link><pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E4%BF%A1%E4%BB%B0/</guid><description>15年思修课的作业，央视纪录片《信仰》 的观后感 视频地址：http://tv.cntv.cn/videoset/C38054 看完《信仰》视频后</description></item><item><title>汉谟拉比法典</title><link>https://shuzang.github.io/%E6%B1%89%E8%B0%9F%E6%8B%89%E6%AF%94%E6%B3%95%E5%85%B8/</link><pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E6%B1%89%E8%B0%9F%E6%8B%89%E6%AF%94%E6%B3%95%E5%85%B8/</guid><description>这篇读书笔记同样属于思修课的作业，写于2015年1月。 拿起《汉谟拉比法典》，静静品读三千七百年前的光明与黑暗，这部刻印在黑色玄武岩柱上的最古</description></item><item><title>罪与罚</title><link>https://shuzang.github.io/%E7%BD%AA%E4%B8%8E%E7%BD%9A/</link><pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E7%BD%AA%E4%B8%8E%E7%BD%9A/</guid><description>这篇读书笔记其实写于2015年1月，属于思修课的作业，今天整理文档的时候看到了，记录在此。 《罪与罚》这部小说以主人公拉斯柯尔尼科夫犯罪及犯罪</description></item><item><title>Acceleration of Anomaly Detection in Blockchain Using In-GPU Cache</title><link>https://shuzang.github.io/acceleration-of-anomaly-detection-in-blockchain-using-in-gpu-cache/</link><pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/acceleration-of-anomaly-detection-in-blockchain-using-in-gpu-cache/</guid><description>Morishima S, Matsutani H. Acceleration of anomaly detection in blockchain using in-GPU Cache[C]. international conference on big data and cloud computing, 2019: 244-251. 引言 区块链的不可篡改特性带来安全性的同时，由操作失误或密钥被盗造成的欺诈交易同样无法取消，因此</description></item><item><title>EdgeChain An Edge-IoT Framework and Prototype</title><link>https://shuzang.github.io/edgechain-an-edge-iot-framework-and-prototype/</link><pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/edgechain-an-edge-iot-framework-and-prototype/</guid><description>EdgeChain设计 EdgeChain的核心思想是集成一个许可区块链和内部货币系统，将边缘云资源池与每个物联网设备的账户和资源使用行为关联</description></item><item><title>区块链实验3-访问控制原型系统实现</title><link>https://shuzang.github.io/access-control-prototype-system-implementation/</link><pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/access-control-prototype-system-implementation/</guid><description>&lt;p>本文是在前面搭建好的区块链实验平台基础上，对 zhang 的 Smart contract-based access control for the internet of things&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> 这篇论文进行复现。主要记录这篇论文里提到的访问控制系统的复现和测试过程。&lt;/p></description></item><item><title>我还是喜欢你</title><link>https://shuzang.github.io/i-still-love-you/</link><pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/i-still-love-you/</guid><description>我还是很喜欢你，像风走了八千里，不问归期。 我还是很喜欢你，像日月轮回交替，不理朝夕。 我还是很喜欢你，像云漂泊九万里，不曾歇息。 我还是很喜欢你</description></item><item><title>Securing Majority-Attack in Blockchain Using Machine Learning</title><link>https://shuzang.github.io/securing-majority-attack-in-blockchain-using-machine-learning/</link><pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/securing-majority-attack-in-blockchain-using-machine-learning/</guid><description>Dey S. A Proof of Work: Securing Majority-Attack in Blockchain Using Machine Learning and Algorithmic Game Theory[J]. International Journal of Wireless and Microwave Technologies, 2018, 8(5): 1-9. Abstract 多数人攻击(majority-attack)对公链网络可能不是一个威胁，但对联盟链来</description></item><item><title>生活技能1-日常生活卫生</title><link>https://shuzang.github.io/life-skills-1-daily-life-hygiene/</link><pubDate>Sat, 05 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/life-skills-1-daily-life-hygiene/</guid><description>收集整理一些日常生活中要注意的一些个人卫生，养成良好的习惯，注意包括口腔，眼睛和睡眠三方面。 第一部分是关于健康方面的知识，包括以下几方面 日常</description></item><item><title>When Intrusion Detection Meets Blockchain Technology A Review</title><link>https://shuzang.github.io/when-intrusion-detection-meets-blockchain-technology-a-review/</link><pubDate>Thu, 03 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/when-intrusion-detection-meets-blockchain-technology-a-review/</guid><description>Meng W, Tischhauser E, Wang Q, et al. When Intrusion Detection Meets Blockchain Technology: A Review[J]. IEEE Access, 2018: 10179-10188. Abstract：以识别网络威胁和可能的事故为目的，入侵检测系统（IDS）已被广泛用于各种计算机网络</description></item><item><title>区块链实验2-Quorum区块链实验平台搭建</title><link>https://shuzang.github.io/build-quorum-private-blockchain-network/</link><pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/build-quorum-private-blockchain-network/</guid><description>&lt;p>上篇文章已经确定了使用 Quorum 区块链，本文记录搭建 Quorum 私有区块链网络的过程。&lt;/p></description></item><item><title>Git深入-子模块, 徽章, 开源协议</title><link>https://shuzang.github.io/git-learning-deep-into/</link><pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/git-learning-deep-into/</guid><description>&lt;p>学习一些更高级或更有趣的 Git 用法，包括子模块、徽章、开源协议选择等。&lt;/p></description></item><item><title>hugo搭建个人博客4-主题美化</title><link>https://shuzang.github.io/hugo-blog-theme-beautify/</link><pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/hugo-blog-theme-beautify/</guid><description>1. 基础知识 通过一个简单的主题开发流程，理解需要的基本知识，为自己进行主题修改和美化打基础，这里参考create a new theme 一文。 开发准备 Ubunt</description></item><item><title>阶段总结4-区块链与异常检测</title><link>https://shuzang.github.io/blockchain-and-anomaly-detection/</link><pubDate>Fri, 27 Sep 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/blockchain-and-anomaly-detection/</guid><description>对区块链进行异常检测（Anomaly detection）也是一个重要的方向，不过有的论文中也称作侵入检测（Intrusion detectio</description></item><item><title>废名田园小说</title><link>https://shuzang.github.io/%E5%BA%9F%E5%90%8D%E7%94%B0%E5%9B%AD%E5%B0%8F%E8%AF%B4/</link><pubDate>Sat, 21 Sep 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E5%BA%9F%E5%90%8D%E7%94%B0%E5%9B%AD%E5%B0%8F%E8%AF%B4/</guid><description>读完《老舍幽默小说》后不过瘾，但又想读轻松点的，遂又找了同系列的《废名田园小说》。 废名（1901-1967），原名冯文炳，中国现代文坛著名作</description></item><item><title>Golang语法基础2-命令、包与模块</title><link>https://shuzang.github.io/golang-basic-grammer-2-command-package-module/</link><pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang-basic-grammer-2-command-package-module/</guid><description>本篇介绍Go中的基础命令，包和模块。 1. 命令 Go 在安装后自带一个命令行工具，名为 go，用来下载、编译、安装、测试 Go 的包和源文件，关于 Go CLI 的发展历</description></item><item><title>老舍幽默小说</title><link>https://shuzang.github.io/%E8%80%81%E8%88%8D%E5%B9%BD%E9%BB%98%E5%B0%8F%E8%AF%B4/</link><pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E8%80%81%E8%88%8D%E5%B9%BD%E9%BB%98%E5%B0%8F%E8%AF%B4/</guid><description>9月8日在图书馆闲逛，找到了新文艺的《老舍幽默小说》，同系列还有不少名家的小说集，但以幽默最爱，故先看老舍的作品，至昨日，经两周，终于看完，</description></item><item><title>白塔，弥陀寺及碧霞宫</title><link>https://shuzang.github.io/scaleless-net-light-tower/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/scaleless-net-light-tower/</guid><description>乘坐公交的路上，经常能看到一座古建筑风格的院落，以及白塔堡的一座白塔。这座白塔确是能做到看第一眼就让人觉得白塔此名名副其实。恰逢朋友相约，便</description></item><item><title>Golang语法基础1-背景与初探</title><link>https://shuzang.github.io/golang-basic-grammar-1-background-and-preliminary-exploration/</link><pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang-basic-grammar-1-background-and-preliminary-exploration/</guid><description>1. 起源与发展 Go/Golang 起源于2007年，并于2009年正式对外发布，是一个完全开源的项目，背后的支持者是谷歌公司，核心设计者是三位著名IT工程师：K</description></item><item><title>利用虚拟机搭建实验平台</title><link>https://shuzang.github.io/%E5%88%A9%E7%94%A8%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BA%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0/</link><pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E5%88%A9%E7%94%A8%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BA%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0/</guid><description>由于网络原因最后没有成功 先声明结论：最后由于网络原因没有成功 一. 前言 为了设计一个对物联网的访问控制方案，首先利用两台树莓派和两台计算机搭建完</description></item><item><title>树莓派安装quorum节点</title><link>https://shuzang.github.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85quorum%E8%8A%82%E7%82%B9/</link><pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85quorum%E8%8A%82%E7%82%B9/</guid><description>在熟悉了树莓派并和虚拟机顺利组网以后，首要面临的事情就是在树莓派中安装quorum节点，由于暂时不使用隐私保护功能，不安装隐私管理器Tess</description></item><item><title>VMware虚拟机使用技巧</title><link>https://shuzang.github.io/vmware-usage/</link><pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/vmware-usage/</guid><description>双系统时常折腾容易坏电脑，因此一般是在虚拟机中使用Linux系统，常用的虚拟机为VMware，本文对VMware的相关知识以及使用过程中的一</description></item><item><title>树莓派和虚拟机组网出现的问题及解决思路</title><link>https://shuzang.github.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%92%8C%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BB%84%E7%BD%91%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF/</link><pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%92%8C%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BB%84%E7%BD%91%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF/</guid><description>小米随身WiFi拥有两种模式，网卡模式可以令电脑搜索并接入其它的WiFi，AP模式可以开启一个WiFi供别的设备加入。现在拥有一台主机，插在</description></item><item><title>树莓派使用网线直连电脑</title><link>https://shuzang.github.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BD%BF%E7%94%A8%E7%BD%91%E7%BA%BF%E7%9B%B4%E8%BF%9E%E7%94%B5%E8%84%91/</link><pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BD%BF%E7%94%A8%E7%BD%91%E7%BA%BF%E7%9B%B4%E8%BF%9E%E7%94%B5%E8%84%91/</guid><description>树莓派刷好系统，要进行联网使用，手里没有显示屏和HDMI线，实验室没有路由器，电脑也没有无线网卡，唯一的网口也被占用。只能通过网线和USB网</description></item><item><title>树莓派常用设置</title><link>https://shuzang.github.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE/</link><pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE/</guid><description>记录树莓派使用过程中经常使用的一些设置。 1. WiFi连接 这里指的是初次启动直连WiFi，主要是因为手里没有屏幕，因为使用的小米随身WiFi，所</description></item><item><title>一个人的朝圣</title><link>https://shuzang.github.io/%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E6%9C%9D%E5%9C%A3/</link><pubDate>Thu, 29 Aug 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E6%9C%9D%E5%9C%A3/</guid><description>1个人，87天，627英里。有关爱的回归、自我发现、日常生活的信念以及万物之美。当再次看到简介中的这段字，我终于明白了这本书的意义。 哈罗德·</description></item><item><title>一禅小和尚</title><link>https://shuzang.github.io/%E4%B8%80%E7%A6%85%E5%B0%8F%E5%92%8C%E5%B0%9A/</link><pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E4%B8%80%E7%A6%85%E5%B0%8F%E5%92%8C%E5%B0%9A/</guid><description>其实我是对漫画没什么兴趣的，但是在微信读书看到小和尚的第一眼，就沉沦了进去，小和尚的形象仿佛能轻易击穿人的心房。故事中的小和尚同样如此，一禅</description></item><item><title>Golang查漏补缺-bufio读取的字符串无法直接进行类型转换</title><link>https://shuzang.github.io/golang%E6%9F%A5%E6%BC%8F%E8%A1%A5%E7%BC%BA-bufio%E8%AF%BB%E5%8F%96%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%97%A0%E6%B3%95%E7%9B%B4%E6%8E%A5%E8%BF%9B%E8%A1%8C%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</link><pubDate>Tue, 27 Aug 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang%E6%9F%A5%E6%BC%8F%E8%A1%A5%E7%BC%BA-bufio%E8%AF%BB%E5%8F%96%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%97%A0%E6%B3%95%E7%9B%B4%E6%8E%A5%E8%BF%9B%E8%A1%8C%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</guid><description>如下列代码，在使用bufio包中的ReadString读取字符串之后，这个字符串无法进行类型转换，每次使用strconv.Atoi()函数返</description></item><item><title>愿</title><link>https://shuzang.github.io/i-wish-you/</link><pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/i-wish-you/</guid><description>愿你三冬暖，愿你春不寒 愿你天黑有灯，下雨有伞 愿你一路上，有良人相伴 愿你所有快乐，无需假扮 愿你此生尽兴，赤诚良善 愿时光能缓，愿故人不散 愿有人陪</description></item><item><title>古生物博物馆及沈飞航空博物馆</title><link>https://shuzang.github.io/paleontological-museum-of-liaoning/</link><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/paleontological-museum-of-liaoning/</guid><description>08.24，又一个周六，从旅游软件中得知古生物博物馆周六日开馆，欣然前往，然后发现上周错过的航空博物馆竟然在路上，于是返程途中开森的进去了。</description></item><item><title>北陵公园及新乐遗址</title><link>https://shuzang.github.io/beiling-park/</link><pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/beiling-park/</guid><description>08.17，周六，前往游览了北陵公园，北陵公园核心的昭陵，祭拜了公园中偶然发现的烈士陵园，最后参观了北陵附近的新乐遗址。 北陵公园 北陵公园是辽</description></item><item><title>Golang查漏补缺-对自定义类型排序</title><link>https://shuzang.github.io/golang%E6%9F%A5%E6%BC%8F%E8%A1%A5%E7%BC%BA-%E5%AF%B9%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B%E6%8E%92%E5%BA%8F/</link><pubDate>Fri, 16 Aug 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang%E6%9F%A5%E6%BC%8F%E8%A1%A5%E7%BC%BA-%E5%AF%B9%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B%E6%8E%92%E5%BA%8F/</guid><description>PAT乙级25分的题好多需要根据一个结构体类型的某个字段进行排序，第一次遇到时确实不知所措，然后查了不少解决方案，这里做个总结。 这一问题一般</description></item><item><title>Golang查漏补缺-程序执行时间优化</title><link>https://shuzang.github.io/golang%E6%9F%A5%E6%BC%8F%E8%A1%A5%E7%BC%BA-%E7%A8%8B%E5%BA%8F%E6%89%A7%E8%A1%8C%E6%97%B6%E9%97%B4%E4%BC%98%E5%8C%96/</link><pubDate>Fri, 16 Aug 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/golang%E6%9F%A5%E6%BC%8F%E8%A1%A5%E7%BC%BA-%E7%A8%8B%E5%BA%8F%E6%89%A7%E8%A1%8C%E6%97%B6%E9%97%B4%E4%BC%98%E5%8C%96/</guid><description>最近在刷PAT乙级的题，因为PAT考点一般只提供C/C++或Java环境的缘故，网上找到的90%都是C++代码，剩下的又绝大部分是Java，</description></item><item><title>开题确定题目</title><link>https://shuzang.github.io/research-proposal-title-select/</link><pubDate>Sun, 14 Jul 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/research-proposal-title-select/</guid><description>待选题目 基于区块链的智能工厂支撑平台研究与设计 基于区块链的智能工厂存储与安全问题研究 基于智能合约的物联网访问控制方案设计与实现 基于区块链的物</description></item><item><title>历次和老师讨论的一些问题总结</title><link>https://shuzang.github.io/%E5%8E%86%E6%AC%A1%E5%92%8C%E8%80%81%E5%B8%88%E8%AE%A8%E8%AE%BA%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</link><pubDate>Sat, 13 Jul 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E5%8E%86%E6%AC%A1%E5%92%8C%E8%80%81%E5%B8%88%E8%AE%A8%E8%AE%BA%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</guid><description>2018.11.23 共识选择 问题：物联网场景下，设备算力有限，没有激励机制，用PoW还是PoS共识？ 论文[1]中使用PoS，论文[3]中节点借用边缘服务器的算</description></item><item><title>hugo搭建个人博客3-进阶设置</title><link>https://shuzang.github.io/hugo-blog-advanced-setup/</link><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/hugo-blog-advanced-setup/</guid><description>本文是 Hugo 使用记录的第二篇，介绍如何为Hugo开启更多的功能。 1. 添加菜单栏页面 我们可以自己建立新的菜单页面1 ，比如我新建life页面用作展示阅</description></item><item><title>科学精神与人文素养</title><link>https://shuzang.github.io/%E7%A7%91%E5%AD%A6%E7%B2%BE%E7%A5%9E%E4%B8%8E%E4%BA%BA%E6%96%87%E7%B4%A0%E5%85%BB/</link><pubDate>Mon, 01 Jul 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E7%A7%91%E5%AD%A6%E7%B2%BE%E7%A5%9E%E4%B8%8E%E4%BA%BA%E6%96%87%E7%B4%A0%E5%85%BB/</guid><description>该部分收集翟天临事件及其它学术不端案例 课程作业，简单的收集翟天临事件和一些其它的学术不端案例，做一些评价。 1. 案例 1.1 翟天临事件 翟天临事件的发酵</description></item><item><title>A Novel Attribute-Based Access Control Scheme Using Blockchain for IoT</title><link>https://shuzang.github.io/a-novel-attribute-based-access-control-scheme-using-blockchain-for-iot/</link><pubDate>Mon, 03 Jun 2019 15:51:00 +0800</pubDate><guid>https://shuzang.github.io/a-novel-attribute-based-access-control-scheme-using-blockchain-for-iot/</guid><description>&lt;p>Ding, Sheng, et al. &amp;ldquo;A Novel Attribute-Based Access Control Scheme Using Blockchain for IoT.&amp;rdquo; &lt;em>IEEE Access&lt;/em> 7 (2019): 38431-38441.&lt;/p>
&lt;p>DOI: &lt;a href="https://doi-org-s.webvpn.neu.edu.cn/10.1109/ACCESS.2019.2905846" target="_blank" rel="noopener noreffer">10.1109/ACCESS.2019.2905846&lt;/a>
&lt;/p>
&lt;p>KeyWord: Access control, attribute-based access control, blockchain, consortium blockchain, IoT&lt;/p>
&lt;p>注：插图经过重新绘制，照片来自原论文截图。&lt;/p>
&lt;h2 id="1-摘要">1. 摘要&lt;/h2>
&lt;p>随着智能设备数量的急剧增加，物联网近年来得到越来越多的关注和快速发展。它通过现有的网络基础设施有效地将物理世界与Internet集成在一起，以便在智能设备之间共享数据。然而，其复杂的大规模网络结构给物联网系统带来了新的安全风险和挑战。为了保证数据的安全性，传统的访问控制技术由于其复杂的访问管理和集中性导致可靠性不足，不适合直接用于物联网系统的访问控制。本文提出了一种新的基于属性的用于物联网系统的访问控制方案，大大简化了访问管理。我们使用区块链技术来记录属性的分发，以避免单点故障和数据篡改。访问控制过程也进行了优化，以满足对物联网设备进行高效和轻量化计算的需要。安全性和性能分析表明，该方案能够有效抵御多种攻击，并能在物联网系统中得到有效的实现。&lt;/p></description></item><item><title>阶段总结3-区块链与智能工厂</title><link>https://shuzang.github.io/blockchain-for-smart-factory/</link><pubDate>Thu, 30 May 2019 09:10:00 +0800</pubDate><guid>https://shuzang.github.io/blockchain-for-smart-factory/</guid><description>1. 背景 传统工厂向智能工厂转变是为了提高生产和管理效率，并高度灵活地适应不断变化的生产要求1。这一目的的达成部分依赖于大量来自于制造设备，工业</description></item><item><title>A Blockchain-Based Solution for Enhancing Security and Privacy in Smart Factory</title><link>https://shuzang.github.io/a-blockchain-based-solution-for-enhancing-security-and-privacy-in-smart-factory/</link><pubDate>Fri, 24 May 2019 21:18:00 +0000</pubDate><guid>https://shuzang.github.io/a-blockchain-based-solution-for-enhancing-security-and-privacy-in-smart-factory/</guid><description>&lt;p>Wan J, Li J, Imran M, et al. A Blockchain-Based Solution for Enhancing Security and Privacy in Smart Factory[J]. IEEE Transactions on Industrial Informatics, 2019.&lt;/p>
&lt;p>被引：2次&lt;/p>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>通过IIoT，智能工厂进入了蓬勃发展的时期。但是，随着节点数量和网络规模的扩大，传统的IIoT架构无法再为这样庞大的系统提供有效支持。因此，我们引入了区块链。它是一种用于构建分布式网络的新兴方案，用于重塑传统的IIoT架构。首先，分析了传统IIoT架构的主要问题，总结了现有的改进。其次，我们引入了一个安全和隐私模型来帮助设计基于区块链的架构。在此基础上，我们分解并重新组织原始的IIoT架构，以形成一个新的，多中心，部分分散的架构。然后，我们引入一些相关的安全技术，以改进和优化新架构。之后，我们设计了数据交互过程和架构的算法。最后，我们使用自动生产平台来讨论具体的实现。实验结果表明，与传统架构相比，该架构提供了更好的安全性和隐私保护。因此，所提出的架构代表了原始架构的重大改进，这为IIoT开发提供了新的方向&lt;/p>
&lt;blockquote>
&lt;p>原因：节点数量和网络规模扩大，传统的IIoT架构无法再为这样庞大的系统提供有效支持。&lt;/p>
&lt;ol>
&lt;li>传统IIoT问题和现有改进（Section I）&lt;/li>
&lt;li>设计基于区块链的架构(Section II)&lt;/li>
&lt;li>安全与隐私模型(Section III)&lt;/li>
&lt;li>设计数据交互过程和算法(Section IV)&lt;/li>
&lt;li>使用自动生产平台具体实施(Section V)&lt;/li>
&lt;/ol>
&lt;/blockquote></description></item><item><title>A Review on the Application of Blockchain to the Next Generation</title><link>https://shuzang.github.io/a-review-on-the-application-of-blockchain-to-the-next-generation/</link><pubDate>Thu, 23 May 2019 17:11:00 +0800</pubDate><guid>https://shuzang.github.io/a-review-on-the-application-of-blockchain-to-the-next-generation/</guid><description>&lt;p>Fernández-Caramés T M, Fraga-Lamas P. A Review on the Application of Blockchain for the Next Generation of Cybersecure Industry 4.0 Smart Factories[J]. arXiv preprint arXiv:1902.09604, 2019.&lt;/p>
&lt;p>DOI: &lt;a href="https://doi.org/10.1109/ACCESS.2019.2908780" target="_blank" rel="noopener noreffer">10.1109/ACCESS.2019.2908780&lt;/a>
&lt;/p>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>工业4.0是一个旨在通过使用一些最新技术改进现代工厂运作方式的概念，例如用于创建工业物联网（IIoT），机器人或大数据应用的技术。其中一种技术是区块链，它能够为不同的工业领域增加信任，安全性和去中心化特性。本文重点分析使用区块链和智能合约开发工业4.0应用时产生的好处和挑战。此外，本文还对工业4.0技术中最相关的基于区块链的应用进行了全面的回顾。因此，其目的是为未来的工业4.0开发人员提供详细指南，以确定区块链如何增强下一代网络工业应用的网络安全。&lt;/p></description></item><item><title>hugo搭建个人博客2-文章写作</title><link>https://shuzang.github.io/hugo-blog-article-write/</link><pubDate>Wed, 15 May 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/hugo-blog-article-write/</guid><description>本文是 Hugo 使用记录的第二篇，介绍关于文章写作的一些问题，包括分类管理、排版技巧、特殊语法等，所有语法基于 LoveIt 主题。 Hugo支持的文章格式为.md</description></item><item><title>Smart Contract-Based Access Control for the Internet of Things</title><link>https://shuzang.github.io/smart-contract-based-access-control-for-the-internet-of-things/</link><pubDate>Tue, 14 May 2019 19:10:00 +0800</pubDate><guid>https://shuzang.github.io/smart-contract-based-access-control-for-the-internet-of-things/</guid><description>Zhang Y, Kasahara S, Shen Y, et al. Smart contract-based access control for the internet of things[J]. IEEE Internet of Things Journal, 2018. 被引：35次 Abstract 该论文调查了物联网中的访问控制问题。提出了一个基于智能合约的访问控制框架，该框架</description></item><item><title>Authentication and Authorization for the Internet of Things</title><link>https://shuzang.github.io/authentication-and-authorization-for-the-internet-of-things/</link><pubDate>Tue, 14 May 2019 15:14:00 +0800</pubDate><guid>https://shuzang.github.io/authentication-and-authorization-for-the-internet-of-things/</guid><description>&lt;p>Kim H, Lee E A. Authentication and Authorization for the Internet of Things[J]. IT Professional, 2017, 19(5): 27-33.&lt;/p>
&lt;p>核心：locally centralized, globally distributed的认证与授权&lt;/p>
&lt;p>引入：由2016年DNS服务商Dyn受到的DDoS攻击说明物联网带来的安全挑战。由2015年乌克兰电网受到的攻击说明物联网遭受攻击的后果更具破坏性。这两者反映的是，物联网设备缺乏相应的访问控制机制，导致面对攻击不够健壮。&lt;/p></description></item><item><title>Blockchain Paradigm and Internet of Things</title><link>https://shuzang.github.io/blockchain-paradigm-and-internet-of-things/</link><pubDate>Mon, 13 May 2019 15:42:00 +0800</pubDate><guid>https://shuzang.github.io/blockchain-paradigm-and-internet-of-things/</guid><description>&lt;p>Valentin Rakovic， Jovan Karamachoski，Vladimir Atanasovski，Liljana Gavrilovska&lt;/p>
&lt;p>Published online: 21 March 2019&lt;/p>
&lt;p>Wireless Personal Communications (2019) 106:219–235
&lt;a href="https://doi.org/10.1007/s11277-019-06270-9">https://doi.org/10.1007/s11277-019-06270-9&lt;/a>&lt;/p>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>区块链是在分布式网络中提供隐私和安全的分布式分类账技术，这使得它适用于具有分布式特性的物联网。然而，区块链需要高计算能力，有高带宽开销和延迟，不适合物联网场景，为了将区块链和物联网结合，许多研究旨在开发针对于特定物联网场景需求的区块链方法。本文详细介绍了物联网区块链集成的相关问题，对当前文献和相关部署测试做了全面调查，指出了当前主要的研究和面临的挑战，并讨论了未来可能的研究领域。&lt;/p></description></item><item><title>hugo搭建个人博客1-基础建站</title><link>https://shuzang.github.io/hugo-builds-personal-blog-1/</link><pubDate>Fri, 26 Apr 2019 10:45:00 +0800</pubDate><guid>https://shuzang.github.io/hugo-builds-personal-blog-1/</guid><description>Hugo 是由 Go 语言实现的静态网站生成器，可以快速建立一个静态网站，虽然多数情况下用来搭建个人博客，但也可以用作展示在线书籍、个人简历等。在使用 Hugo 之</description></item><item><title>生命清单</title><link>https://shuzang.github.io/%E7%94%9F%E5%91%BD%E6%B8%85%E5%8D%95/</link><pubDate>Thu, 25 Apr 2019 16:05:00 +0800</pubDate><guid>https://shuzang.github.io/%E7%94%9F%E5%91%BD%E6%B8%85%E5%8D%95/</guid><description>一开始看到这本书的时候，我以为这是一本关于梦想的书，就像是《白日梦想家》那样，描述一个人在即将去世前鼓起勇气去完成自己生命清单的事。但是我错</description></item><item><title>Industry 4.0 Development and Application of Intelligent Manufacturing</title><link>https://shuzang.github.io/industry-4.0-development-and-application-of-intelligent-manufacturing/</link><pubDate>Mon, 15 Apr 2019 14:22:00 +0800</pubDate><guid>https://shuzang.github.io/industry-4.0-development-and-application-of-intelligent-manufacturing/</guid><description>&lt;p>Author：Guo-Jian Cheng, Li-Ting Liu, Xin-Jian Qiang, Ye Liu&lt;/p>
&lt;p>Published in：2016 International Conference on Information System and Artificial Intelligence (ISAI)&lt;/p>
&lt;p>Conference Location：Hong Kong, China&lt;/p>
&lt;p>Cited times：30&lt;/p>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>过去几年，工业和信息技术领域经历了深刻的变革，进入了工业4.0时代，将从嵌入式系统演变到网络物理系统（CPS）。制造业将通过互联网，整合内部和外部网络，朝着智能化方向发展。本文介绍工业4.0的发展，并以120的智慧信息技术（WIT120）为例介绍网络物理系统，然后通过数字工厂到智能工厂的例子介绍工业4.0在智能制造中的应用。最后分析工业4.0在未来的发展方向，为其在智能制造中的应用提供参考。&lt;/p></description></item><item><title>阶段总结2-区块链用于 IoT/IIoT：智能工厂案例</title><link>https://shuzang.github.io/blockchain-for-iot/iiota-smart-factory-case-study/</link><pubDate>Fri, 12 Apr 2019 20:24:00 +0800</pubDate><guid>https://shuzang.github.io/blockchain-for-iot/iiota-smart-factory-case-study/</guid><description>随着物联网的高速发展，越来越多的智能设备接入到了人们的日常生活和工业生产当中。尤其在智能工厂领域，物联网设备的使用大幅提高了工厂自动化程度，</description></item><item><title>提取以太坊的区块产生时间</title><link>https://shuzang.github.io/extract-the-block-generation-time-of-ethereum/</link><pubDate>Fri, 05 Apr 2019 21:35:00 +0800</pubDate><guid>https://shuzang.github.io/extract-the-block-generation-time-of-ethereum/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>目的是提取以太坊的区块产生时间形成数据集，初步的思路有两种：&lt;/p>
&lt;ul>
&lt;li>爬取以太坊区块浏览器中的时间数据，然后格式化形成数据集输出&lt;/li>
&lt;li>同步以太坊的所有区块（头），利用以太坊本身提供的接口提取每个区块的时间戳信息，然后将时间戳转换为真实的日期格式形成数据集输出，&lt;a href="https://tool.lu/timestamp/" target="_blank" rel="noopener noreffer">时间戳转换在线工具&lt;/a>
&lt;/li>
&lt;/ul>
&lt;p>查询资料过程中，了解到谷歌已提供以太坊的区块信息数据集&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。虽然数据集本身没有时间信息，但可以导出时间戳进行转换，了解到谷歌使用的工具是&lt;a href="https://github.com/blockchain-etl/ethereum-etl#blockscsv" target="_blank" rel="noopener noreffer">ethereum-etl&lt;/a>
，故最终的解决方案是：使用ethereum-etl导出时间戳，编写Python程序转换时间戳并导出数据集。&lt;/p></description></item><item><title>Distributed Blockchain-Based Data Protection Framework for Modern Power Systems</title><link>https://shuzang.github.io/distributed-blockchain-based-data-protection-framework-for-modern-power-systems/</link><pubDate>Mon, 01 Apr 2019 11:16:00 +0800</pubDate><guid>https://shuzang.github.io/distributed-blockchain-based-data-protection-framework-for-modern-power-systems/</guid><description>&lt;p>Author：Gaoqi Liang , Steven R. Weller, Fengji Luo , Junhua Zhao, Zhao Yang Dong&lt;/p>
&lt;p>Published in：IEEE Transactions on Smart Grid 2018(Early Access)&lt;/p>
&lt;p>期刊级别：SCI I区&lt;/p>
&lt;p>被引量：19次&lt;/p>
&lt;p>keywords：Blockchain, Modern power systems, Cyber-attacks, Distributed network, False data injection attacks&lt;/p>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>现代电力系统的网络安全同时吸引了学术和工业界的关注，许多针对网络攻击的检测和防御手段因此而被提出。本文提出了一种新的基于区块链的分布式保护框架，用于增强现代电力系统应对网络攻击的自抵御能力。我们对区块链技术如何用于增强电网鲁棒性和安全性做了全面的讨论，使用电表作为分布式网络的节点，将电表的测量数据打包为区块。所提出方案的有效性通过基于IEEE-118节点系统的仿真实验来说明。&lt;/p></description></item><item><title>秦皇求仙入海处及孟姜女庙</title><link>https://shuzang.github.io/meng-jiangnu-temple/</link><pubDate>Sat, 30 Mar 2019 20:51:00 +0800</pubDate><guid>https://shuzang.github.io/meng-jiangnu-temple/</guid><description>2019年3月30日，自上周去过箭馆射箭之后，本周按原定计划前往秦皇求仙入海处及港口博物馆。 秦皇求仙入海处 由31路转8路抵达求仙入海处正门，</description></item><item><title>swarm网络搭建</title><link>https://shuzang.github.io/swarm%E7%BD%91%E7%BB%9C%E6%90%AD%E5%BB%BA/</link><pubDate>Thu, 28 Mar 2019 19:59:00 +0800</pubDate><guid>https://shuzang.github.io/swarm%E7%BD%91%E7%BB%9C%E6%90%AD%E5%BB%BA/</guid><description>&lt;p>说实话，swarm的资料比较难找，倒是IPFS的比较多一点。最后只在&lt;a href="http://medium.com/" target="_blank" rel="noopener noreffer">Medium&lt;/a>
找到了一些，本篇文章就是在实践其中的一些项目，并通过这样来学习swarm。&lt;/p>
&lt;p>参考链接：&lt;a href="https://swarm-gateways.net/bzz:/theswarm.eth/" target="_blank" rel="noopener noreffer">swarm官网&lt;/a>
，&lt;a href="https://swarm-guide.readthedocs.io/en/latest/introduction.html" target="_blank" rel="noopener noreffer">swarm文档&lt;/a>
，&lt;a href="https://github.com/ethersphere" target="_blank" rel="noopener noreffer">github项目&lt;/a>
&lt;/p>
&lt;p>还有一些帮助理解的资料：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://ethereum.stackexchange.com/questions/55027/swarm-in-a-private-network" target="_blank" rel="noopener noreffer">关于swarm的三个理解上的问题&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/ethersphere/go-ethereum/wiki/IPFS-&amp;amp;-SWARM" target="_blank" rel="noopener noreffer">swarm和ipfs的比较&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>树莓派项目构想-扫地机器人</title><link>https://shuzang.github.io/raspberry-project-sweeping-robot/</link><pubDate>Tue, 26 Mar 2019 19:40:00 +0800</pubDate><guid>https://shuzang.github.io/raspberry-project-sweeping-robot/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本文是创新创业的结课报告，结课报告的题目要求如下：&lt;/p>
&lt;ul>
&lt;li>通过课程学习、课下查阅网络与图文资料，了解和掌握树莓派的功能、扩展性与应用领域（树莓派的典型和非典型应用）&lt;/li>
&lt;li>深入分析某一个具体行业或工作的工作特点，找到痛点难点，并分析树莓派的适用性（树莓派的什么特点使其适合用于解决这一问题）&lt;/li>
&lt;li>基于树莓派的功能，讨论如何通过增加相应的软硬件（传感器、软件模块、算法库……等），满足所关注的问题&lt;/li>
&lt;li>以“开发产品原型并吸引风投”为目标，完成一份创业项目计划书&lt;/li>
&lt;/ul>
&lt;p>注：不要求完成实际作品，而是强调基于技术的创意、运用工具和所学知识解决实际问题的能力、分析评价项目商业价值的能力&lt;/p></description></item><item><title>A Case Study for Blockchain in Manufacturing “FabRec”</title><link>https://shuzang.github.io/a-case-study-for-blockchain-in-manufacturing-fabrec/</link><pubDate>Mon, 25 Mar 2019 10:13:00 +0800</pubDate><guid>https://shuzang.github.io/a-case-study-for-blockchain-in-manufacturing-fabrec/</guid><description>&lt;p>Author：Atin Angrisha, Benjamin Cravera, Mahmud Hasana, Binil Starly&lt;/p>
&lt;p>Published in：46th SME North American Manufacturing Research Conference, NAMRC 46, Texas, USA&lt;/p>
&lt;p>被引量：7次&lt;/p>
&lt;p>keywords：blockchain; cyber-physical systems; smart contracts; ethereum; decentralized networks; shareable databases&lt;/p>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>随着产品定制成为新的商机，制造商必须找到在无信任网络中进行协作和实现信息共享的方法。在本文中，我们提出“FabRec”：一种用于处理由各制造商使用区块链技术产生的制造信息的方法。其中，制造机器和计算节点构成去中心化网络来实现制造过程的自动化与透明化，基于对历史记录的审计实现对制造过程的第三方验证，使用智能合约实现参与者之间无纸化合同。同时，系统将与制造相关的信息分类，并使其在P2P网络上可用，以通过可验证的审计跟踪确保透明度和数据来源。我们通过组合制造机器，片上系统（SoC, System on chip）和计算节点来建立测试平台，以展示组成联盟的不同制造商可以通过分布式网络进行通信的机制。我们的测试平台原型展示了驻留在分布式网络上的计算机代码的价值：用于验证区块链的信息以及在物理世界中自动启动操作的方式。本文旨在通过测试平台揭示系统组成，为更大规模的测试做准备，并讨论区块链在制造业的未来潜力。&lt;/p></description></item><item><title>智能合约-gas limit问题</title><link>https://shuzang.github.io/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6-gas-limit%E9%97%AE%E9%A2%98/</link><pubDate>Thu, 21 Mar 2019 22:00:00 +0800</pubDate><guid>https://shuzang.github.io/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6-gas-limit%E9%97%AE%E9%A2%98/</guid><description>&lt;p>在搭建的以太坊私链上进行智能合约部署时，出现了以下问题&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">INFO&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">03&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">11.690&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nx">Served&lt;/span> &lt;span class="nx">eth_sendTransaction&lt;/span> &lt;span class="nx">reqid&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">24&lt;/span> &lt;span class="nx">t&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">684.186&lt;/span>&lt;span class="nx">µs&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;exceeds block gas limit&amp;#34;&lt;/span>
&lt;span class="nb">Error&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">exceeds&lt;/span> &lt;span class="nx">block&lt;/span> &lt;span class="nx">gas&lt;/span> &lt;span class="nx">limit&lt;/span> &lt;span class="kc">undefined&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>出现该错误的原因如错误描述，是当前合约所需的gas超过了区块的最大gas。这可能与参数gasLimit有关。在创世区块的配置文件中，我们使用了默认的配置值，为&lt;code>0x2fefd8&lt;/code>，转换为10进制即&lt;code>3141592&lt;/code>。&lt;/p>
&lt;p>注：&lt;a href="http://tool.oschina.net/hexconvert/" target="_blank" rel="noopener noreffer">在线转换工具&lt;/a>
&lt;/p></description></item><item><title>LightChain:A Lightweight Blockchain System for Industrial Internet of Things</title><link>https://shuzang.github.io/lightchaina-lightweight-blockchain-system-for-industrial-internet-of-things/</link><pubDate>Tue, 19 Mar 2019 11:00:00 +0800</pubDate><guid>https://shuzang.github.io/lightchaina-lightweight-blockchain-system-for-industrial-internet-of-things/</guid><description>&lt;p>Author： Yinqiu Liu, Kun Wang, Yun Lin, and Wenyao Xu&lt;/p>
&lt;p>Published in：IEEE Transactions on Industrial Informatics&lt;/p>
&lt;p>State：Early Access&lt;/p>
&lt;p>Index Terms：Blockchain, Industrial Internet of Things, Distributed System, Consensus Mechanism, Data Filter.&lt;/p>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>虽然区块链和IIoT之间的结合得到了广泛的关注，但区块链的高资源需求和IIoT设备的有限性能之间的矛盾还无法较好的解决。一方面，由于公钥结构、默克尔树和PoW等数学概念的引入，部署区块链需要巨大的算力；另一方面，全节点应该能同步大量的区块数据和处理P2P网络中的大量交易。IIoT设备难以承受其对存储容量和带宽的占用。本文中，我们提出了名为&lt;strong>LightChain&lt;/strong>的轻量级区块链使其适用于IIoT场景，提出了一个名为**Synergistic Multiple Proof（SMP）&lt;strong>的共识机制来促进IIoT设备间的合作，提出了一种称为&lt;/strong>LightBlock（LB）**的轻量级数据结构，用于简化广播内容。此外，还设计了一种 **Unrelated Block Offloading Filter (UBOF)**以避免分类帐的无限增长，同时不影响区块链的可追溯性。实验表明，LightChain可以将计算成本降低39.32％，将块生成速度提高74.06％。在存储和网络使用方面，降幅分别为43.35％和90.55％。&lt;/p></description></item><item><title>利用树莓派作为服务器建立动态博客</title><link>https://shuzang.github.io/using-virtual-machine-as-raspberry-pi-server-to-build-dynamic-blog/</link><pubDate>Wed, 13 Mar 2019 14:32:00 +0800</pubDate><guid>https://shuzang.github.io/using-virtual-machine-as-raspberry-pi-server-to-build-dynamic-blog/</guid><description>1. 前言 该工作为课程作业，主要目标为利用树莓派作为服务器，完成wordpress的配置，建立动态博客网站。详细的作业要求如下： 制作raspbi</description></item><item><title>Docker搭建以太坊私链</title><link>https://shuzang.github.io/docker%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%A7%81%E9%93%BE/</link><pubDate>Tue, 12 Mar 2019 11:24:00 +0800</pubDate><guid>https://shuzang.github.io/docker%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%A7%81%E9%93%BE/</guid><description>&lt;p>在以太坊github的&lt;a href="https://github.com/ethereum/go-ethereum" target="_blank" rel="noopener noreffer">官方项目地址&lt;/a>
发现其支持Docker启动，同时因为Docker相对于虚拟机的易用性，决定尝试使用Docker搭建以太坊联盟链&lt;/p>
&lt;p>Docker安装部分查看自官方说明，搭建过程主要参考&lt;a href="https://www.jianshu.com/p/7994db7a2b89?from=singlemessage" target="_blank" rel="noopener noreffer">简书-使用Docker搭建以太坊私有链并部署合约&lt;/a>
&lt;/p>
&lt;h2 id="一docker安装">一、Docker安装&lt;/h2>
&lt;p>OS环境：Ubuntu 18.04 LTS(bionic)&lt;/p>
&lt;p>内核版本：4.18.0-16-generic&lt;/p>
&lt;p>处理器架构：amd64&lt;/p>
&lt;p>官方的安装说明位于：&lt;a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/" target="_blank" rel="noopener noreffer">Get Docker CE for Ubuntu&lt;/a>
&lt;/p></description></item><item><title>以太坊节点连接到网络的几种方式</title><link>https://shuzang.github.io/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E8%8A%82%E7%82%B9%E8%BF%9E%E6%8E%A5%E5%88%B0%E7%BD%91%E7%BB%9C%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</link><pubDate>Tue, 12 Mar 2019 08:33:00 +0800</pubDate><guid>https://shuzang.github.io/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E8%8A%82%E7%82%B9%E8%BF%9E%E6%8E%A5%E5%88%B0%E7%BD%91%E7%BB%9C%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid><description>文章翻译自：Connecting to the network 如何寻找对等节点 在初始化时，geth会使用一组记录在源码中的bootstrap节点来连接。要指定这些节</description></item><item><title>Geth console命令详解</title><link>https://shuzang.github.io/geth-console%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link><pubDate>Fri, 08 Mar 2019 10:27:00 +0800</pubDate><guid>https://shuzang.github.io/geth-console%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid><description>&lt;p>Geth Console是一个交互式的JavaScript执行环境，其中&lt;code>&amp;gt;&lt;/code>是命令提示符。在这个环境里也内置了一些用来操作以太坊的JavaScript对象，可以直接使用这些对象。这些对象主要包括：&lt;/p>
&lt;ul>
&lt;li>eth：包含一些跟操作区块链相关的方法；&lt;/li>
&lt;li>net：包含一些查看p2p网络状态的方法；&lt;/li>
&lt;li>admin：包含一些与管理节点相关的方法；&lt;/li>
&lt;li>miner：包含启动&amp;amp;停止挖矿的一些方法；&lt;/li>
&lt;li>personal：主要包含一些管理账户的方法；&lt;/li>
&lt;li>txpool：包含一些查看交易内存池的方法；&lt;/li>
&lt;li>web3：包含了以上对象，还包含一些单位换算的方法。&lt;/li>
&lt;/ul></description></item><item><title>geth命令参数说明</title><link>https://shuzang.github.io/geth%E5%91%BD%E4%BB%A4%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E/</link><pubDate>Fri, 08 Mar 2019 09:26:00 +0800</pubDate><guid>https://shuzang.github.io/geth%E5%91%BD%E4%BB%A4%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E/</guid><description>Geth是以太坊智能合约开发工具，是一个命令行工具，所以熟悉其命令参数有助于提高开发效率。本文是geth help的翻译，基于geth 1.8.</description></item><item><title>创世区块文件genesis.json</title><link>https://shuzang.github.io/%E5%88%9B%E4%B8%96%E5%8C%BA%E5%9D%97%E6%96%87%E4%BB%B6genesis.json/</link><pubDate>Thu, 07 Mar 2019 19:48:00 +0800</pubDate><guid>https://shuzang.github.io/%E5%88%9B%E4%B8%96%E5%8C%BA%E5%9D%97%E6%96%87%E4%BB%B6genesis.json/</guid><description>文件说明 关于genesis.json的官方说明位于两处 Private network Connecting to the network 每条区块链都以创世区块开头，而genesis.json正是创世区块的配置文</description></item><item><title>虚拟机搭建以太坊私链</title><link>https://shuzang.github.io/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%A7%81%E9%93%BE/</link><pubDate>Thu, 07 Mar 2019 14:53:00 +0800</pubDate><guid>https://shuzang.github.io/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%A7%81%E9%93%BE/</guid><description>一、单虚拟机 最简单的方式是使用一个虚拟机，这也是在条件有限的情况下的最好选择。方法是在一台虚拟机上启用多个终端，每个终端使用不同的端口通信。</description></item><item><title>Blockchain-Based Platform Architecture for Industrial IoT</title><link>https://shuzang.github.io/blockchain-based-platform-architecture-for-industrial-iot/</link><pubDate>Thu, 28 Feb 2019 10:50:00 +0800</pubDate><guid>https://shuzang.github.io/blockchain-based-platform-architecture-for-industrial-iot/</guid><description>&lt;p>Author：Nikolay Teslya; Igor Ryabchikov&lt;/p>
&lt;p>Published in：2017 21st Conference of Open Innovations Association(FRUCT)&lt;/p>
&lt;p>Date of Conference: 6-10 Nov. &lt;strong>2017&lt;/strong>&lt;/p>
&lt;p>会议举办地：Helsinki, Finland&lt;/p>
&lt;p>被引量：11次&lt;/p>
&lt;h2 id="摘要">摘要&lt;/h2>
&lt;p>机器人技术，物联网概念，大数据处理技术，自动化和分布式数字分类账技术的发展引发了第四次工业革命。新工业的主要问题之一是基于物联网的智能工厂内部组件以及工厂之间的互操作。这种互操作应该提供物联网参与者之间的信任;控制资源的分配（如维护时间，能源等）和成品。本文描述了集成物联网和区块链技术以解决这些问题的可能方法之一。为此，开发了一种结合了Smart-M3信息共享平台和区块链平台的架构。所提出的体系结构的一个主要特征是使用智能合约来处理和存储与智能空间组件之间的交互相关的信息。&lt;/p></description></item><item><title>Blockchain Platforms Overview for Industrial IoT Purpose</title><link>https://shuzang.github.io/blockchain-platforms-overview-for-industrial-iot-purpose/</link><pubDate>Wed, 27 Feb 2019 11:11:00 +0800</pubDate><guid>https://shuzang.github.io/blockchain-platforms-overview-for-industrial-iot-purpose/</guid><description>&lt;p>Author：Nikolay Teslya; Igor Ryabchikov&lt;/p>
&lt;p>Published in：2018 22nd Conference of Open Innovations Association(FRUCT)&lt;/p>
&lt;p>Date of Conference: 15-18 May &lt;strong>2018&lt;/strong>&lt;/p>
&lt;p>会议举办地：Jyvaskyla, Finland&lt;/p>
&lt;p>被引量：1次&lt;/p>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>如今已有很多可用区块链平台存在。但要集成到工业物联网的智能空间中，区块链平台不仅应支持代币交易，还应支持智能合约、容错共识机制，以及参与者创建和实施新区块和智能合约的地位的平等。本文分析了最常用的共识机制，公共（无权限）和私有（有权限）区块链的具体特征。还描述了满足IIoT平台开发要求的区块链平台。通过分析所得结果，可选择平台和特定模块来实现用于IIoT平台的区块链。&lt;/p></description></item><item><title>Decentralizing Privacy：Using Blockchain to Protect Personal Data</title><link>https://shuzang.github.io/decentralizing-privacyusing-blockchain-to-protect-personal-data/</link><pubDate>Thu, 14 Feb 2019 09:50:00 +0800</pubDate><guid>https://shuzang.github.io/decentralizing-privacyusing-blockchain-to-protect-personal-data/</guid><description>&lt;p>Zyskind G, Nathan O, Pentland A, et al. Decentralizing Privacy: Using Blockchain to Protect Personal Data[C]. ieee symposium on security and privacy, 2015: 180-184.&lt;/p>
&lt;p>DOI: &lt;a href="https://doi.org/10.1109/SPW.2015.27" target="_blank" rel="noopener noreffer">10.1109/SPW.2015.27&lt;/a>
&lt;/p>
&lt;p>KeyWord: Protocols, Privacy, Data privacy, Online banking, Encryption, Compounds.&lt;/p>
&lt;p>注：部分插图经过重新绘制，部分来自原论文截图。&lt;/p>
&lt;h2 id="摘要">摘要&lt;/h2>
&lt;p>当前的商业模式下，第三方收集和控制了大量的个人隐私，损害了用户权益，越来愈多的安全事件使得这一模式开始受到质疑。比特币证明了通过一个分布式的公有分类账在金融领域进行可信和可审计的计算是可行的。因此，本文提出了一种基于区块链的分布式个人数据管理系统，用于保证用户对个人数据的所有权和控制权。与比特币不同的是，本文提出的系统中，区块链交易不是金融交易，而是用于携带指令，如存储、查询和共享数据等，在文章的最后也会讨论区块链未来可能的发展。&lt;/p></description></item><item><title>大学全文</title><link>https://shuzang.github.io/the-great-learning/</link><pubDate>Tue, 22 Jan 2019 15:40:00 +0800</pubDate><guid>https://shuzang.github.io/the-great-learning/</guid><description>大学章句 右经一章，盖孔子之言，而曾子述之。其传十章，则曾子之意而门人记之也。旧本颇有错简，今因程子所定，而更考经文，别为序次如左。 《大学》之</description></item><item><title>越简单越美好</title><link>https://shuzang.github.io/%E8%B6%8A%E7%AE%80%E5%8D%95%E8%B6%8A%E7%BE%8E%E5%A5%BD/</link><pubDate>Mon, 21 Jan 2019 09:37:00 +0800</pubDate><guid>https://shuzang.github.io/%E8%B6%8A%E7%AE%80%E5%8D%95%E8%B6%8A%E7%BE%8E%E5%A5%BD/</guid><description>&lt;p>人生最贵重的，就是通过不断地学习，将你经历过的事、遇到过的人、读过的书、走过的路，揉碎吸收之后，用这些养分供养你，成就一个只属于你自己的人生，然后，让你不断超越昨天的你。&lt;/p>
&lt;h3 id="关于生活">关于生活&lt;/h3>
&lt;p>简约不等于清贫，而是懂得取舍&lt;/p>
&lt;p>如果18℃能让我们保暖，我们为什么一定要21℃的奢侈呢？&lt;/p>
&lt;p>我们吃的、住的，原本是为了让我们生活得更舒适，但有一天这些东西打扰到你的清净，分散你的精力，让你花时间保养它们，不得不时常打扫它们，保持房子的清洁。稍有不慎，甚至会让你受到伤害。那时我就考虑：我的生活里，真的需要这么多东西吗？&lt;/p>
&lt;p>拒收礼物，每一件未经计划来到我身边的东西都是多余的。&lt;/p>
&lt;p>有时候，让人累的不是有计划的生活，而是没有计划的生活！别人一个电话你就到，或者随便地应约，又随便地爽约，这样你在朋友那里是得不到尊重的。随心所欲的生活看似自由，其实极大地消耗着人地时间和精力，你连自己每天要做什么都不清楚，每天上班不敢拒绝加班，下班后懒懒的往沙发上一躺。你以为你为生活少奋斗了，其实你没有。那些看似严谨约束地计划里，实则藏着你想要地自由与梦想！只有当你有能力掌控你的生活之后，你的生活，才是你的！&lt;/p></description></item><item><title>Internet of Smart Things-IoST</title><link>https://shuzang.github.io/internet-of-smart-things-iost/</link><pubDate>Thu, 17 Jan 2019 10:06:00 +0800</pubDate><guid>https://shuzang.github.io/internet-of-smart-things-iost/</guid><description>&lt;p>Author：Mayra Samaniego, Ralph Deters&lt;/p>
&lt;p>Published in：2017 IEEE International Conference on Cognitive Computing (ICCC)&lt;/p>
&lt;p>Date of Conference: 25-30 June 2017&lt;/p>
&lt;p>会议级别：不知道&lt;/p>
&lt;p>被引量：11次&lt;/p>
&lt;p>keywords：IoT; Management; Blockchain; Multichain;Smart Things; Autonomy;Self-inferencing; Self-monitoring;Fog; Edge.&lt;/p>
&lt;br/>
&lt;h3 id="摘要">摘要&lt;/h3>
&lt;p>构成物联网的大量异构设备需要有效的资源管理。随着雾计算的出现，一些管理任务可以下移到物联网的边缘，更靠近物理设备。建立在雾网络上的区块链可以处理一些物联网的管理任务，如通信、存储和身份验证。这种情况下，以及超越了原来对物联网中Things的定义，可以称之为“Smart Things&amp;rdquo;。Smart Things提供基于CLIPS编程语言的人工智能（AI）功能，以实现自我推理和自我监控。这项工作使用私链构建工具Multichain通过读写块中信息来达成Smart Things之间的通信。本文评估了Edison Arduino板上部署的Smart Things以及雾网络上部署的的Multichain网络。&lt;/p></description></item><item><title>区块链实验1-区块链平台选择的思考</title><link>https://shuzang.github.io/blockchain-platform-compare-and-select/</link><pubDate>Wed, 16 Jan 2019 13:11:00 +0800</pubDate><guid>https://shuzang.github.io/blockchain-platform-compare-and-select/</guid><description>首先我们就 Ethereum 等九个平台做分析比较，从而确定要用来作为实验平台的区块链。 1. Ethereum 关于存储 以太坊生态中的一些工具和技术是用来解决大数据量存储问题的，</description></item><item><title>Ethereum Classic</title><link>https://shuzang.github.io/ethereum-classic/</link><pubDate>Wed, 16 Jan 2019 10:48:00 +0800</pubDate><guid>https://shuzang.github.io/ethereum-classic/</guid><description>最近ETC遭受疑似51%攻击的影响很大，虽然最后的结果还没出来，仍不确定是真的遭受了51%攻击，还是之前官方所称的ASIC矿机测试带来的问题</description></item><item><title>区块链的数据存储问题</title><link>https://shuzang.github.io/data-storage-in-blockchain/</link><pubDate>Wed, 16 Jan 2019 09:11:00 +0800</pubDate><guid>https://shuzang.github.io/data-storage-in-blockchain/</guid><description>区块链的本质是一个只增数据库，这就意味着其中存储的数据会随着时间的推移不断增加，而区块链分布式的特性要求节点需要存储区块链的整个副本，因此，</description></item><item><title>BlockChain：A Distributed Solution to Automotive Security and Privacy</title><link>https://shuzang.github.io/blockchaina-distributed-solution-to-automotive-security-and-privacy/</link><pubDate>Tue, 15 Jan 2019 19:40:00 +0800</pubDate><guid>https://shuzang.github.io/blockchaina-distributed-solution-to-automotive-security-and-privacy/</guid><description>Abstract 智能车辆互联提供了一系列先进的服务，这有益于车主、运输当局、车辆制造商和其它服务提供者。但这也可能把智能汽车暴露在一系列安全和隐私威胁之下</description></item><item><title>Blockchain in Internet of Things:Challenges and Solutions</title><link>https://shuzang.github.io/blockchain-in-internet-of-thingschallenges-and-solutions/</link><pubDate>Wed, 09 Jan 2019 09:50:00 +0800</pubDate><guid>https://shuzang.github.io/blockchain-in-internet-of-thingschallenges-and-solutions/</guid><description>&lt;p>Author：Ali Dorri, Salil S. Kanhere, and Raja Jurdak&lt;/p>
&lt;p>arXiv预印（非正式发表）&lt;/p>
&lt;p>2016.08&lt;/p>
&lt;h3 id="abstract">Abstract&lt;/h3>
&lt;p>物联网产业在快速发展，但安全和隐私的问题始终没有解决。由于物联网分布式的拓扑结构和资源有限的设备，传统的安全和隐私方法不适用于物联网。区块链能用于保证和物联网具有相同拓扑的P2P网络的安全与隐私，因此应也能用于物联网，然后，BC是计算密集型的，需要较高带宽且延迟较高，并不适合物联网。本文提出一种基于BC技术的安全、私有和轻量级的架构，去除了BC的缺点，同时保留了其安全和隐私特性，使其适用于物联网。利用智能家居场景为例做了描述，整个架构分为智能家居层、覆盖网络层、云存储层三层。在各层使用了不同类型的BC，并对常见的安全威胁做了定性分析，证明了其保证物联网安全与隐私的有效性。&lt;/p></description></item><item><title>Dorri和Novo两人的论文对比</title><link>https://shuzang.github.io/dorri%E5%92%8Cnovo%E4%B8%A4%E4%BA%BA%E7%9A%84%E8%AE%BA%E6%96%87%E5%AF%B9%E6%AF%94/</link><pubDate>Tue, 08 Jan 2019 09:37:00 +0800</pubDate><guid>https://shuzang.github.io/dorri%E5%92%8Cnovo%E4%B8%A4%E4%BA%BA%E7%9A%84%E8%AE%BA%E6%96%87%E5%AF%B9%E6%AF%94/</guid><description>前言 两篇比对的论文分别是： Ali Dorri. Blockchain in Internet of Things:Challenges and Solutions Oscar Novo. Blockchain Meets IoT:An Architecture for Scalable Access Management in IoT 对比的方向主要有：背景、架构、访问控制的实现方式、安全和隐私、性能。 背景</description></item><item><title>Blockchain for IoT Security and Privacy:The Case Study of a Smart Home</title><link>https://shuzang.github.io/blockchain-for-iot-security-and-privacythe-case-study-of-a-smart-home/</link><pubDate>Mon, 07 Jan 2019 14:55:00 +0800</pubDate><guid>https://shuzang.github.io/blockchain-for-iot-security-and-privacythe-case-study-of-a-smart-home/</guid><description>&lt;p>Dorri, Ali &amp;amp; Kanhere, Salil &amp;amp; Jurdak, Raja &amp;amp; Gauravaram, Praveen. (2017). Blockchain for IoT Security and Privacy: The Case Study of a Smart Home. 10.1109/PERCOMW.2017.7917634.&lt;/p>
&lt;h3 id="abstract">Abstract&lt;/h3>
&lt;p>由于物联网网络大规模和分布式的特性，物联网（IoT）安全和隐私仍然是一个主要的挑战。基于区块链的方法可以提供分布式的安全性和隐私性，但会带来显著的能量、延迟和计算开销，不适合大多数资源受限的IoT设备。在我们之前的工作中，我们通过去除PoW（Proof of Work, 工作量证明）和货币（coins）的概念，提出了一个适用于物联网的BC（Blockchain, 区块链）的轻量级实例。我们的方法在智能家居环境中进行了验证，主要包括三层：云存储，overlay和智能家居。在本文中，我们深入研究并概述了智能家居层的各种核心组件和功能。每个智能家居都配备了一个永远在线的高资源设备，称为“miner”，负责处理家庭内外的所有通信。该miner还维护一个私有BC，用于控制和审计通信。我们通过彻底分析其在机密性，完整性和可用性的基本安全目标，表明我们提出的基于BC的智能家居框架是安全的。最后，我们利用仿真结果证明我们的方法引入的开销（在流量，处理时间和能耗方面）相对于其安全性和隐私性增益而言是微不足道的。&lt;/p></description></item><item><title>Bubbles of Trust：a decentralized Blockchain-based authentication system for IoT</title><link>https://shuzang.github.io/bubbles-of-trusta-decentralized-blockchain-based-authentication-system-for-iot/</link><pubDate>Thu, 03 Jan 2019 19:26:00 +0800</pubDate><guid>https://shuzang.github.io/bubbles-of-trusta-decentralized-blockchain-based-authentication-system-for-iot/</guid><description>Author：Mohamed Tahar Hammi, Badis Hammi, Patrick Bellot, Ahmed Serhrouchni Published in: Computers &amp;amp; Security(2018.6) SCI期刊分区：3区 Abstract 我们使用的许多东西都配备了电子设备和协议，以使它们互连和连接到互</description></item><item><title>凡心所向，素履以往</title><link>https://shuzang.github.io/%E5%87%A1%E5%BF%83%E6%89%80%E5%90%91%E7%B4%A0%E5%B1%A5%E4%BB%A5%E5%BE%80/</link><pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E5%87%A1%E5%BF%83%E6%89%80%E5%90%91%E7%B4%A0%E5%B1%A5%E4%BB%A5%E5%BE%80/</guid><description>凡心所向，素履以往，生如逆旅，一苇以航。 三月桃花，四月欢唱，两人一马，明日故乡。 流浪陌路，暖然绯凉，写意人生，相识一场。 不关此世，不负己心，</description></item><item><title>Blockchain Meets IoT：An Architecture for Scalable Access Management in IoT</title><link>https://shuzang.github.io/blockchain-meets-iotan-architecture-for-scalable-access-management-in-iot/</link><pubDate>Fri, 28 Dec 2018 15:42:00 +0800</pubDate><guid>https://shuzang.github.io/blockchain-meets-iotan-architecture-for-scalable-access-management-in-iot/</guid><description>Novo O. Blockchain Meets IoT: An Architecture for Scalable Access Management in IoT[J]. IEEE Internet of Things Journal, 2018, 5(2): 1184-1195. DOI: 10.1109/JIOT.2018.2812239 keywords: Access control, Blockchain, IoT, smart contracts 摘要 物联网所面临的一个问题是部署在全球的数十亿的设备如何去管理，现有的访问管理技</description></item><item><title>Block Chain based Intelligent Industrial Network (DSDIN)</title><link>https://shuzang.github.io/block-chain-based-intelligent-industrial-network-dsdin/</link><pubDate>Fri, 14 Dec 2018 08:37:00 +0800</pubDate><guid>https://shuzang.github.io/block-chain-based-intelligent-industrial-network-dsdin/</guid><description>&lt;p>Author：Barco You, Matthias Hub, Mengzhe You, Bo Xu, Mingzhi Yu and Ican Uemlianin&lt;/p>
&lt;p>Published in：eprint arXiv:1809.06551(1809意为18年9月)&lt;/p>
&lt;p>SCI期刊分区：在arXic上，不算正式发表&lt;/p>
&lt;p>keywords：IIoT, BC, Artificial Intelligence, Industry 4.0, Intelligent Manufacturing, Edge Computing.&lt;/p>
&lt;p>&lt;strong>主题&lt;/strong>：如何为IIoT构建一个全球范围的分布式工业网络&lt;/p>
&lt;p>&lt;strong>主要工作&lt;/strong>：&lt;/p>
&lt;ol>
&lt;li>综述。从工业互联网讲到工业物联网，最后讲到基于区块链的工业物联网&lt;/li>
&lt;li>详细描述了所构建的基于区块链的智能工业网络DSDIN的各部分组成&lt;/li>
&lt;li>介绍了一些可以高效的运行在DSDIN上的应用&lt;/li>
&lt;li>介绍了维持整个体系健康运行的激励机制&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Abstract&lt;/strong>：过去由于技术限制，制造业是“中央集权”的，工厂（特别是大型制造商）垄断了几乎所有的制造资源，包括：技术，原材料，设备，工人，市场信息等。但是，这种集中生产成本高、效率低并且不灵活，难以应对快速变化，多样化和个性化的用户需求。本文介绍了一个智能工业网络（DSDIN），它提供了一个完全分布式的制造网络，每个人都可以参与制造，因为权力下放而没有中间环节，人们能够快速获得他们想要的产品或服务，获得授权并通过努力（例如提供创意，设计或设备，原材料等）以一种低成本的方式获得回报。DSDIN实际上是一个平台，由DSDIN形成的智能网络，制造中心不再是工厂，实际上没有制造中心。DSDIN为人和物（包括原材料，设备，成品/半成品等）提供多参与的点对点网络。通过网络传输的信息称为智能服务算法（ISA）。用户可以通过ISA将过程模型，公式或控制参数发送到设备，DSDIN中的每个事务都是由ISA定义的智能服务。&lt;/p>
&lt;p>&lt;em>&lt;font size = 2>注：要构建一个全球范围的分布式工业网络，做的是基于区块链技术的工业物联网平台，和以太坊很相似，从文中也可以看到，大量借鉴了以太坊的思路，但是根据工业物联网的特性做了调整。&lt;/font>&lt;/em>&lt;/p></description></item><item><title>Consortium Blockchain for Secure Energy Trading in Industrial Internet of Things</title><link>https://shuzang.github.io/consortium-blockchain-for-secure-energy-trading-in-industrial-internet-of-things/</link><pubDate>Thu, 13 Dec 2018 17:14:00 +0800</pubDate><guid>https://shuzang.github.io/consortium-blockchain-for-secure-energy-trading-in-industrial-internet-of-things/</guid><description>&lt;p>&lt;strong>主题&lt;/strong>：用联盟链解决工业物联网的能量交易问题&lt;/p>
&lt;p>&lt;strong>主要工作&lt;/strong>：&lt;/p>
&lt;ol>
&lt;li>针对工业物联网(IIoT)里能量交易的安全与隐私问题，提出能量区块链(energy blockchain)&lt;/li>
&lt;li>为了减少由交易确认的延迟造成的交易限制，提出一个基于信用的支付方案，以支持快速和频繁的能源限制&lt;/li>
&lt;li>在体系里构建了一个能量银行，并使用Stackelberg 博弈进行基于信用贷款的最优定价&lt;/li>
&lt;li>对能量区块链解决的安全问题，能量区块链的性能，基于信用的支付方案的性能做分析&lt;/li>
&lt;/ol></description></item><item><title>以太坊基础知识</title><link>https://shuzang.github.io/ethereum-instruction/</link><pubDate>Tue, 11 Dec 2018 20:34:00 +0800</pubDate><guid>https://shuzang.github.io/ethereum-instruction/</guid><description>1. 基本知识 基本知识大概需要了解两部分，一部分是以太坊历史，或者说规划；一部分是基本的概念。这些都可以从以太坊中国社区找到。下面就贴三个链接。</description></item><item><title>阶段总结1-区块链与物联网</title><link>https://shuzang.github.io/blockchain-for-iot/</link><pubDate>Tue, 11 Dec 2018 14:55:00 +0800</pubDate><guid>https://shuzang.github.io/blockchain-for-iot/</guid><description>&lt;p>物联网（Internet of Things，IoT），有两层含义：其一，物联网是在互联网基础上进行延伸和扩展的网络，其核心和基础仍然是互联网；其二，网络的用户端延伸和扩展到了任何物品与物品之间，可进行信息交换和通信，也就是物物相连。&lt;/p>
&lt;p>我国将物联网定义为：通过信息传感设备，按照约定的协议，把任何物品与互联网连接起来，进行信息交换和通信，以实现智能化识别、定位、跟踪、监控和管理的一种网络。在物联网时代，能接入网络的不仅仅是计算机和智能手机，还有汽车、健身设备、锁具、交通摄像头甚至你能想到的一切。&lt;/p>
&lt;p>&lt;strong>常见 IoT 场景&lt;/strong>：智能电网、智能家居、智慧交通、智能制造，智慧城市&lt;/p></description></item><item><title>所罗门之匙的启示</title><link>https://shuzang.github.io/%E6%89%80%E7%BD%97%E9%97%A8%E4%B9%8B%E5%8C%99%E7%9A%84%E5%90%AF%E7%A4%BA/</link><pubDate>Fri, 07 Dec 2018 16:41:00 +0800</pubDate><guid>https://shuzang.github.io/%E6%89%80%E7%BD%97%E9%97%A8%E4%B9%8B%E5%8C%99%E7%9A%84%E5%90%AF%E7%A4%BA/</guid><description>所罗门之匙一书中，所罗门囚禁魔神，将魔神的力量赋予他的学徒，从而一举将他的学徒们，变成了堪比神魔的法师。那些门徒们，很多之前都没有接触过魔法</description></item><item><title>领域概况了解</title><link>https://shuzang.github.io/%E9%A2%86%E5%9F%9F%E6%A6%82%E5%86%B5%E4%BA%86%E8%A7%A3/</link><pubDate>Tue, 20 Nov 2018 14:25:00 +0800</pubDate><guid>https://shuzang.github.io/%E9%A2%86%E5%9F%9F%E6%A6%82%E5%86%B5%E4%BA%86%E8%A7%A3/</guid><description>1. 区块链的诞生 1.1 记账 ​ 详述了记账科技的千年发展，并介绍了经由区块链发展起来的分布式账本，代表性应用是超级账本（Hyperledger）项目 1.2</description></item><item><title>比特币基本原理</title><link>https://shuzang.github.io/%E6%AF%94%E7%89%B9%E5%B8%81%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</link><pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E6%AF%94%E7%89%B9%E5%B8%81%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</guid><description>&lt;blockquote>
&lt;p>注：文章主体引自“张健. 区块链，定义为了金融与经济新格局[M]. 北京：机械工业出版社. 2016:162-177”，中间有补充和删减，补充都直接上了链接，所以文末就不放参考文献了。&lt;/p>
&lt;/blockquote>
&lt;p>区块链里最基本也是最重要的几个概念是&lt;strong>地址&lt;/strong>、&lt;strong>交易&lt;/strong>、&lt;strong>区块&lt;/strong>、&lt;strong>网络&lt;/strong>。比特币用地址来标识一笔交易的支出方和接收方。所有的交易最终需要被记到统一的账本（也就是区块链）上，而这个账本是通过区块确认并完成的。每一个新区块的产生，都会被打上时间戳（区块头里的一个字段，是真的时间，后面详细介绍），最终生成按照时间前后排列并加以记录的电子交易证明。每个独立节点之间又通过比特币网络来建立联系，这样就组成了一个去中心化、分布式的电子交易记录时间戳服务器系统。比特币通过构造这个分布式时间戳服务器来解决&lt;a href="https://baike.baidu.com/item/%E5%8F%8C%E9%87%8D%E6%94%AF%E4%BB%98/7046722?fr=aladdin" target="_blank" rel="noopener noreffer">双重支付&lt;/a>
问题。&lt;/p></description></item><item><title>比特币诞生与发展</title><link>https://shuzang.github.io/%E6%AF%94%E7%89%B9%E5%B8%81%E8%AF%9E%E7%94%9F%E4%B8%8E%E5%8F%91%E5%B1%95/</link><pubDate>Fri, 02 Nov 2018 14:02:00 +0800</pubDate><guid>https://shuzang.github.io/%E6%AF%94%E7%89%B9%E5%B8%81%E8%AF%9E%E7%94%9F%E4%B8%8E%E5%8F%91%E5%B1%95/</guid><description>&lt;p>**声明：**这篇文章引自“张健. 区块链，定义为了金融与经济新格局[M]. 北京：机械工业出版社. 2016:20-27”&lt;/p>
&lt;p>区块链作为比特币背后的技术架构，是随着比特币的出现而诞生的。因此，要讲区块链的诞生，我们就不得不从比特币的历史说起。&lt;/p>
&lt;h3 id="密码朋克">密码朋克&lt;/h3>
&lt;p>说到比特币的缘起，就不得不谈到一个略显神秘的团体：密码朋克（Cypherpunk）。这个团体是密码天才们的松散联盟，比特币的创新中大量借鉴了密码朋克成员的贡献。密码朋克这个词一部分来源于密码（Cipher），这在密码学中意为用于加密解密的算法；一部分来源于赛博朋克（Cyberpunk），这是指那个时代流行的一个科幻流派。这样的组合有很微妙的意味，散发着改变社会的激进理想。凯文·凯利曾在《失控》里写道：&lt;/p>
&lt;blockquote>
&lt;p>所以在1992年夏天，一个由富有创意的数学黑客、公民自由主义者、自由市场的鼓吹者、天才程序员、改旗易帜的密码学家以及其他各种前卫人士组成的松散联盟开始创造、拼凑甚至是盗用加密技术，并将其植入网络之中。他们管自己叫“密码朋克”。
1992年秋天的几个周六，我参加了蒂姆·梅还有其他大概是15个“密码反叛者”在加州帕洛阿托举行的“密码朋克”月度会议……小组是通过密码朋克邮件列表这个虚拟网络空间来推广他们的努力的。来自世界各地、越来越多的热衷于加密技术的人每天通过互联网上的“邮件列表”互动，为了以低成本来实现他们的想法（比如数字签名）。&lt;/p>
&lt;/blockquote>
&lt;p>密码朋克们的观点是：现代社会不断蔓延着对个人隐私和权利的侵蚀。他们互相交流着对这一问题的关注，并认为在数字时代保护隐私对于维持一个开放社会是至关重要的。这一理念在比特币中得到体现：去中心化的追求，对匿名的拥抱，自由主义的原则。&lt;/p>
&lt;p>密码朋克本身就是数字货币最早的传播者，在其电子邮件组中，常见关于数字货币的讨论，并有一些想法付诸实践。比如大卫·乔姆、亚当·贝克、戴伟、哈尔·芬尼等人在早期数字货币领域做了大量的探索。&lt;/p></description></item><item><title>Blockchain and the Internet of Things in the Industrial Sector</title><link>https://shuzang.github.io/blockchain-and-the-internet-of-things-in-the-industrial-sector/</link><pubDate>Wed, 24 Oct 2018 12:25:00 +0800</pubDate><guid>https://shuzang.github.io/blockchain-and-the-internet-of-things-in-the-industrial-sector/</guid><description>说明：三个工业物联网和区块链结合的场景 供应链 货物在供应链各环节流通时，装运信息缺乏可见性，并且拥有装运延迟，这种延迟通常是由于一个流通的批准</description></item><item><title>Work-in-Progress Integrating Low-Power IoT devices to</title><link>https://shuzang.github.io/work-in-progress-integrating-low-power-iot-devices-to/</link><pubDate>Tue, 23 Oct 2018 11:22:00 +0800</pubDate><guid>https://shuzang.github.io/work-in-progress-integrating-low-power-iot-devices-to/</guid><description>Özyılmaz, Kazım Rıfat, and Arda Yurdakul. &amp;ldquo;Work-in-Progress: Integrating low-power IoT devices to a blockchain-based infrastructure.&amp;rdquo; 2017 International Conference on Embedded Software (EMSOFT). IEEE, 2017. 说明：关于物联网和区块链结合，节点资源有限的一种解决方案 Introduction</description></item><item><title>Blockchains and Smart Contracts for the Internet of Things</title><link>https://shuzang.github.io/blockchains-and-smart-contracts-for-the-internet-of-things/</link><pubDate>Mon, 22 Oct 2018 10:19:00 +0800</pubDate><guid>https://shuzang.github.io/blockchains-and-smart-contracts-for-the-internet-of-things/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>缺失可信中介使交易双方之间的协调更快&lt;/p>
&lt;p>密码学的大量使用为网络中的所有交互带来了权威性&lt;/p>
&lt;p>智能合约允许分布式的，高度自动化的工作流程&lt;/p>
&lt;h2 id="blockchains-and-iot">Blockchains and IoT&lt;/h2>
&lt;p>目前的中心化模型中，制造商维护以百万计的设备的软件更新代价是高昂的&lt;/p>
&lt;p>用户缺乏对应用从后台是否私自获取数据的信任，需要一个透明度保障的方法&lt;/p>
&lt;p>区块链技术可以解决这些问题&lt;/p>
&lt;p>制造商的所有物联网设备都在同一个区块链网络上运行，制造商部署智能合约并允许它们在区块链网络上存储最新固件更新的哈希值，这些设备要么将智能合约的地址附加到它们的区块链客户端，要么通过发现服务找到它。然后，它们可以查询合约，了解新的固件更新，并通过分式对等文件系统请求更新并通过哈希验证更新正确性，对该文件的第一次请求由制造商自己的节点（该节点也加入区块链网络）提供服务，但更新文件传播到足够的节点后，制造商的节点可以停止提供服务，由已获得更新的设备向未获得更新的设备提供服务，一切自动进行，没有用户交互。&lt;/p></description></item><item><title>人工智能管理世界</title><link>https://shuzang.github.io/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%AE%A1%E7%90%86%E4%B8%96%E7%95%8C/</link><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%AE%A1%E7%90%86%E4%B8%96%E7%95%8C/</guid><description>2017年5月，AlphaGo战胜顶尖围棋选手柯洁，同年10月，汉森公司的机器人索菲亚获得沙特阿拉伯公民身份。这两个去年曾轰动一时的新闻似乎</description></item><item><title>ICMP协议</title><link>https://shuzang.github.io/internet-control-message-protocol/</link><pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/internet-control-message-protocol/</guid><description>&lt;p>网络层除了主要的 IP 协议外，还有 ICMP（Internet Control Message Protocol） 协议，ping 和 traceroute 都会用到它，本文进行介绍。&lt;/p></description></item><item><title>自然辩证法</title><link>https://shuzang.github.io/%E8%87%AA%E7%84%B6%E8%BE%A9%E8%AF%81%E6%B3%95/</link><pubDate>Wed, 19 Sep 2018 22:26:00 +0800</pubDate><guid>https://shuzang.github.io/%E8%87%AA%E7%84%B6%E8%BE%A9%E8%AF%81%E6%B3%95/</guid><description>&lt;p>被称为“科技哲学”的自然辩证法，是对以科学技术为中介和手段的人与自然、社会的相互关系的概括和总结。由于其学科性质，天生便与科学技术有着密不可分的关系，尤其是对科学技术发展的历史的研究，更是课堂上所讲的各种理论的佐证。而作为这门学科的体系化开端，恩格斯的《自然辨证法》自然而然地散发着一种迷人的魅力，吸引着对这门学科有着兴趣的我。我从这本文集中选择了《导言》、《神灵世界中的自然科学》两篇论文和其它几篇札记做了阅读，以下是我的一些心得。&lt;/p></description></item><item><title>密码学知识</title><link>https://shuzang.github.io/%E5%AF%86%E7%A0%81%E5%AD%A6%E7%9F%A5%E8%AF%86/</link><pubDate>Mon, 17 Sep 2018 17:03:00 +0800</pubDate><guid>https://shuzang.github.io/%E5%AF%86%E7%A0%81%E5%AD%A6%E7%9F%A5%E8%AF%86/</guid><description>1. 导论 1.1 关于几种安全的理解： 现在提到的主要的安全类型包括信息安全，网络安全，系统安全 其实这几种安全概念是相互交叉的，它们分别包含一个范围，但</description></item><item><title>工程与伦理</title><link>https://shuzang.github.io/%E5%B7%A5%E7%A8%8B%E4%B8%8E%E4%BC%A6%E7%90%86/</link><pubDate>Sat, 15 Sep 2018 08:52:00 +0800</pubDate><guid>https://shuzang.github.io/%E5%B7%A5%E7%A8%8B%E4%B8%8E%E4%BC%A6%E7%90%86/</guid><description>工程伦理问题涉及对工程行为正当性的思考和价值判断，往往需要在价值冲突中做出正确的价值选择。了解它的必要性有三个： 提升工程师的伦理素养，加强工</description></item><item><title>如果度过研究生阶段</title><link>https://shuzang.github.io/what-should-be-done-in-master-three-years/</link><pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/what-should-be-done-in-master-three-years/</guid><description>&lt;p>研三重新来写这篇文章，感触更多，也许当初明白这些，会有不同的选择，可惜，世上没有如果。&lt;/p></description></item><item><title>1692年镌刻于巴尔的摩圣保罗教堂</title><link>https://shuzang.github.io/engraved-in-st-pauls-church-in-1962/</link><pubDate>Wed, 22 Aug 2018 16:33:00 +0800</pubDate><guid>https://shuzang.github.io/engraved-in-st-pauls-church-in-1962/</guid><description>在喧闹而奔忙的世界中平静地往前走 这是多么和平，安宁 你要与周围的所有的人友好相处 尽可能不要放弃这种努力和追求 你要轻轻但清晰地说出自己的真实思想</description></item><item><title>Markdown使用探索</title><link>https://shuzang.github.io/markdown-usage/</link><pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/markdown-usage/</guid><description>前言 Markdown用习惯之后，就会不管什么事都想用它来做，因为真的太好用了。本篇文章就是一些尝试，因为往往“不堪大用”，所以给这篇文章起了</description></item><item><title>Markdown语法</title><link>https://shuzang.github.io/markdown-syntax/</link><pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/markdown-syntax/</guid><description>Markdown由Aaron Swartz和John Gruber共同设计 Aaron Swartz的博客：http://www.aaronsw.com/ John</description></item><item><title>Git提高-分支管理, 多人协作, 标签管理, gitignore, commit信息</title><link>https://shuzang.github.io/git-learning-improvement/</link><pubDate>Sun, 22 Apr 2018 10:21:16 +0800</pubDate><guid>https://shuzang.github.io/git-learning-improvement/</guid><description>上一篇我们学习了Git的基本知识，包括仓库创建，提交、修改、推送、回退等等操作，本篇学习一些高级的功能。转自 廖雪峰的官方网站-git教程 。 1.</description></item><item><title>Git入门-基本概念, 基本原理, 安装使用</title><link>https://shuzang.github.io/git-learning-getting-started/</link><pubDate>Fri, 20 Apr 2018 19:06:20 +0800</pubDate><guid>https://shuzang.github.io/git-learning-getting-started/</guid><description>&lt;p>版本控制系统在代码开发过程中必不可缺，本系列学习 Git 的使用，版本托管服务则是 Github。以廖雪峰大神 &lt;a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener noreffer">git教程&lt;/a>
为主体，辅以使用过程中遇到的问题和心得。&lt;/p></description></item><item><title>编程语言选择</title><link>https://shuzang.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E9%80%89%E6%8B%A9/</link><pubDate>Wed, 18 Apr 2018 20:06:18 +0800</pubDate><guid>https://shuzang.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E9%80%89%E6%8B%A9/</guid><description>从大学期间教授的C、C++、Java，到自己接触的python、js，以及耳熟能详的PHP、C#、Ruby，甚至其它众多听过的没听过的语言。</description></item><item><title>Hexo 搭建个人博客</title><link>https://shuzang.github.io/using-hexo-build-persoanl-blog/</link><pubDate>Tue, 17 Apr 2018 20:30:00 +0800</pubDate><guid>https://shuzang.github.io/using-hexo-build-persoanl-blog/</guid><description>Hexo 是一款快速、简洁且高效的静态博客框架，使用Markdown渲染引擎解析文章，拥有着丰富的主题社区 ，可以帮助我们快速建立自己的博客，正在成为</description></item><item><title>愿世界和平</title><link>https://shuzang.github.io/war/</link><pubDate>Tue, 17 Apr 2018 16:47:35 +0800</pubDate><guid>https://shuzang.github.io/war/</guid><description>我的梦想是世界和平这句话常被人们作为玩笑，但对与战争比邻而居的人们来说，这是心底最真诚而热切的渴望。偶然看到了这组图片，是叙利亚的战后情景，</description></item><item><title>极简主义</title><link>https://shuzang.github.io/minimalism/</link><pubDate>Sat, 14 Apr 2018 22:25:00 +0800</pubDate><guid>https://shuzang.github.io/minimalism/</guid><description>极简主义是一种理念，当我第一次接触到这个概念时就被它所吸引，并竭力往这个目标靠近。今天在人民日报官博看到了关于极简理念的分享，正巧刚建好博客</description></item><item><title>Android系统移植</title><link>https://shuzang.github.io/android-system-migration/</link><pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/android-system-migration/</guid><description>采用Android6.0（棉花糖），编译环境为Ubuntu14.04和opoenjdk-7-jdk 1. 获取源码 首先参阅Android网站sou</description></item><item><title>Debian系统的移植</title><link>https://shuzang.github.io/migration-of-debian-system/</link><pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/migration-of-debian-system/</guid><description>Debian 系统的移植总分四部分：u-boot的编译与烧录，Linux内核的编译与烧录，Debian 基本根文件系统的制作、配置与烧录，开发板设置。 1. u</description></item><item><title>内核配置</title><link>https://shuzang.github.io/linux-lernel-configuration/</link><pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/linux-lernel-configuration/</guid><description>内核配置的目的主要是裁剪掉不必要的文件和目录，获得一个最适用的操作系统。可通过执行下面的命令进入配置窗口 1 $ make menuconfig 执行完毕后显示一个基于文本的</description></item><item><title>移植相关知识</title><link>https://shuzang.github.io/migration-related-knowledge/</link><pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate><guid>https://shuzang.github.io/migration-related-knowledge/</guid><description>1. Linux 操作系统组成 Linux 操作系统由 Linux 内核、shell 命令解释器和应用程序3部分构成 1.1 shell Linux的内核不能直接接受来自终端的用户命令，shell 为</description></item></channel></rss>